<?xml version="1.0"?>

<!DOCTYPE project [
  <!ENTITY build-common SYSTEM "file:../build-common.xml">
]>

<!--
  $Header: /home/cvs/cvsgelo/cvsroot/guehene-dpl-DrJava\040v.20020804/src/edu/rice/cs/util/build.xml,v 1.1 2005/03/03 19:29:45 toeivesb Exp $
-->
<project name="util" default="test">
  <!-- srcroot is the base directory of the source, 4 packages back -->
  <property name="srcroot" value="${basedir}/../../../.." />

  <!-- built is where the compiled classes go -->
  <property name="built" value="${srcroot}/../built/" />

  <!-- projpath is the path from srcroot to the root directory of this project
  -->
  <property name="projpath" value="edu/rice/cs/${ant.project.name}" />

  <!-- put new javadoc in this directory after each commit -->
  <property name="public_javadoc_dir" value="/home/javaplt/public_html/javadoc/${ant.project.name}" />

  <property name="manifest" value="manifest" />

  <!-- Stable and development targets not used in util. -->
  <target name="development">
  </target>

  <!-- Stable and development targets not used in util. -->
  <target name="stable">
  </target>

  <!-- include standard build file parts -->
  &build-common;

  <!-- generate jar and javadoc
       Requires version-tag to be set (via command line -Dversion-tag=)
       For example, to release drjava-20020101-0000, you'd type:

       ant -Dversion-tag=drjava-20020101-0000 release
  -->
  <target name="release" if="version-tag" depends="update">
    <echo message="Util should not be released by itself. Release the associated version of DrJava instead." />
    <!-- util doesn't make its own jars right now -->
    <!--
    <antcall target="jar">
      <param name="jarfile" value="${jars_dir}/${version-tag}.jar" />
    </antcall>
    -->

    <!-- generate javadoc for the committed version! -->
    <!--
    <antcall target="generate_javadoc">
      <param name="javadoc_dir" value="${public_javadoc_dir}" />
      <param name="javadoc_title" value="${version-tag}" />
    </antcall>
    -->

    <!-- give group permissions to write over the javadoc -->
    <!--
    <chmod perm="g+w,a+rX" dir="${public_javadoc_dir}" type="both" includes="**" />
    -->
  </target>

  <target name="compile" depends="do-compile">
    <rmic base="${built}"
      classname="edu.rice.cs.util.newjvm.IntegratedMasterSlaveTest.MasterImpl" />

    <rmic base="${built}"
      classname="edu.rice.cs.util.newjvm.IntegratedMasterSlaveTest.CounterSlave" />

  </target>

  <!-- Makes a jar. -->
  <target name="jar">
    <jar jarfile="${jarfile}" manifest="${manifest}">
      <fileset dir="${built}"
               includes="${projpath}/**"
               excludes="**/*Test.class" />
    </jar>
  </target>
</project>

