/*
 *  Initiative - A role playing utility to track turns
 *  Copyright (C) 2002 Devon D Jones
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 *  The author of this program grants you the ability to use this code
 *  in conjunction with code that is covered under the Open Gaming License
 *
 *  AddCombatant.java
 *
 *  Created on January 4, 2002, 2:10 PM
 */
package plugin.initiative.gui;

import pcgen.core.SettingsHandler;
import plugin.initiative.InitiativePlugin;
import plugin.initiative.XMLCombatant;

/**
 *@author     devon
 *@created    April 7, 2003
 */
public class AddCombatant extends javax.swing.JDialog {

	/**
	 *  Creates new dialog for Adding a new Combatant This contructor is used if
	 *  you know what frame you are launching from
	 *
	 *@param  parent      Description of the Parameter
	 *@param  modal       Description of the Parameter
	 *@param  initiative  Description of the Parameter
	 */
	public AddCombatant(java.awt.Frame parent, boolean modal, Initiative initiative) {
		super(parent, modal);
		initComponents();
		initDropDown();
		setLocation(parent.getX() + 100, parent.getY() + 100);
		this.initiative = initiative;
		boolean bHP = SettingsHandler.getGMGenOption(InitiativePlugin.LOG_NAME + ".doHP", true);
		//boolean bHP = initPrefs.getBoolean("doHP", true);
		sHP.setEnabled(bHP);
		int maxHp = SettingsHandler.getGMGenOption(InitiativePlugin.LOG_NAME + ".dbMaxHP", 100);
		//int maxHp = initPrefs.getInt("dbMaxHP", 100);
		int maxNum = SettingsHandler.getGMGenOption(InitiativePlugin.LOG_NAME + ".dbMaxNum", 20);
		//int maxNum = initPrefs.getInt("dbMaxNum", 20);
		sNumber.setMaximum(maxNum);
		sHP.setMaximum(maxHp);
	}

	/**
	 *  This method is called from within the constructor to initialize the form.
	 *  WARNING: Do NOT modify this code. The content of this method is always
	 *  regenerated by the Form Editor.
	 */
  private void initComponents() {//GEN-BEGIN:initComponents
    java.awt.GridBagConstraints gridBagConstraints;

    jLabel1 = new javax.swing.JLabel();
    tName = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    tPlayer = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    sBonus = new javax.swing.JSlider();
    jLabel4 = new javax.swing.JLabel();
    sNumber = new javax.swing.JSlider();
    bSave = new javax.swing.JButton();
    bCancel = new javax.swing.JButton();
    jLabel5 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    sHP = new javax.swing.JSlider();
    jLabel7 = new javax.swing.JLabel();
    cType = new javax.swing.JComboBox();
    lBonus = new javax.swing.JTextField();
    lHP = new javax.swing.JTextField();
    lNumber = new javax.swing.JTextField();
    jSeparator1 = new javax.swing.JSeparator();
    jLabel8 = new javax.swing.JLabel();
    jLabel9 = new javax.swing.JLabel();
    jLabel10 = new javax.swing.JLabel();
    jLabel11 = new javax.swing.JLabel();
    jLabel12 = new javax.swing.JLabel();
    jLabel13 = new javax.swing.JLabel();
    tCON = new javax.swing.JTextField();
    tSTR = new javax.swing.JTextField();
    tDEX = new javax.swing.JTextField();
    tINT = new javax.swing.JTextField();
    tWIS = new javax.swing.JTextField();
    tCHA = new javax.swing.JTextField();
    jLabel14 = new javax.swing.JLabel();
    jLabel15 = new javax.swing.JLabel();
    jLabel16 = new javax.swing.JLabel();
    tFortitude = new javax.swing.JTextField();
    tReflex = new javax.swing.JTextField();
    tWill = new javax.swing.JTextField();
    jLabel51 = new javax.swing.JLabel();
    jLabel17 = new javax.swing.JLabel();
    jLabel18 = new javax.swing.JLabel();
    tCR = new javax.swing.JTextField();

    getContentPane().setLayout(new java.awt.GridBagLayout());

    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowClosing(java.awt.event.WindowEvent evt) {
        closeDialog(evt);
      }
    });

    jLabel1.setText("Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 5, 10, 0);
    getContentPane().add(jLabel1, gridBagConstraints);

    tName.setMinimumSize(new java.awt.Dimension(100, 21));
    tName.setPreferredSize(new java.awt.Dimension(200, 21));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tName, gridBagConstraints);

    jLabel2.setText("Player");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
    getContentPane().add(jLabel2, gridBagConstraints);

    tPlayer.setPreferredSize(new java.awt.Dimension(200, 21));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tPlayer, gridBagConstraints);

    jLabel3.setText("Bonus");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
    getContentPane().add(jLabel3, gridBagConstraints);

    sBonus.setMaximum(20);
    sBonus.setMinimum(-20);
    sBonus.setValue(0);
    sBonus.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        sBonusKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        sBonusKeyReleased(evt);
      }
    });

    sBonus.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        sBonusMousePressed(evt);
      }
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        sBonusMouseReleased(evt);
      }
    });

    sBonus.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sBonusMouseDragged(evt);
      }
      public void mouseMoved(java.awt.event.MouseEvent evt) {
        sBonusMouseMoved(evt);
      }
    });

    sBonus.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
      public void propertyChange(java.beans.PropertyChangeEvent evt) {
        sBonusPropertyChange(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(sBonus, gridBagConstraints);

    jLabel4.setText("Number");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
    getContentPane().add(jLabel4, gridBagConstraints);

    sNumber.setMaximum(20);
    sNumber.setMinimum(1);
    sNumber.setValue(1);
    sNumber.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        sNumberKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        sNumberKeyReleased(evt);
      }
    });

    sNumber.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        sNumberMousePressed(evt);
      }
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        sNumberMouseReleased(evt);
      }
    });

    sNumber.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sNumberMouseDragged(evt);
      }
      public void mouseMoved(java.awt.event.MouseEvent evt) {
        sNumberMouseMoved(evt);
      }
    });

    sNumber.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
      public void propertyChange(java.beans.PropertyChangeEvent evt) {
        sNumberPropertyChange(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(sNumber, gridBagConstraints);

    bSave.setText("Save");
    bSave.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bSaveActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 16;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
    getContentPane().add(bSave, gridBagConstraints);

    bCancel.setText("Cancel");
    bCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bCancelActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 16;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    getContentPane().add(bCancel, gridBagConstraints);

    jLabel5.setForeground(new java.awt.Color(204, 204, 204));
    jLabel5.setText("-20");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
    getContentPane().add(jLabel5, gridBagConstraints);

    jLabel6.setText("Hit Points");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
    getContentPane().add(jLabel6, gridBagConstraints);

    sHP.setMinimum(1);
    sHP.setValue(1);
    sHP.setEnabled(false);
    sHP.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        sHPKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        sHPKeyReleased(evt);
      }
    });

    sHP.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        sHPMousePressed(evt);
      }
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        sHPMouseReleased(evt);
      }
    });

    sHP.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sHPMouseDragged(evt);
      }
      public void mouseMoved(java.awt.event.MouseEvent evt) {
        sHPMouseMoved(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(sHP, gridBagConstraints);

    jLabel7.setText("Type");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    getContentPane().add(jLabel7, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(cType, gridBagConstraints);

    lBonus.setText("0");
    lBonus.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        lBonusActionPerformed(evt);
      }
    });

    lBonus.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        lBonusFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    getContentPane().add(lBonus, gridBagConstraints);

    lHP.setText("1");
    lHP.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        lHPActionPerformed(evt);
      }
    });

    lHP.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        lHPFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    getContentPane().add(lHP, gridBagConstraints);

    lNumber.setText("1");
    lNumber.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        lNumberActionPerformed(evt);
      }
    });

    lNumber.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        lNumberFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    getContentPane().add(lNumber, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
    getContentPane().add(jSeparator1, gridBagConstraints);

    jLabel8.setText("STR");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
    getContentPane().add(jLabel8, gridBagConstraints);

    jLabel9.setText("DEX");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
    getContentPane().add(jLabel9, gridBagConstraints);

    jLabel10.setText("CON");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
    getContentPane().add(jLabel10, gridBagConstraints);

    jLabel11.setText("INT");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 12;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
    getContentPane().add(jLabel11, gridBagConstraints);

    jLabel12.setText("WIS");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
    getContentPane().add(jLabel12, gridBagConstraints);

    jLabel13.setText("CHA");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 14;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
    getContentPane().add(jLabel13, gridBagConstraints);

    tCON.setText("10");
    tCON.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tCONActionPerformed(evt);
      }
    });

    tCON.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tCONFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tCON, gridBagConstraints);

    tSTR.setText("10");
    tSTR.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tSTRActionPerformed(evt);
      }
    });

    tSTR.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tSTRFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tSTR, gridBagConstraints);

    tDEX.setText("10");
    tDEX.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tDEXActionPerformed(evt);
      }
    });

    tDEX.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tDEXFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tDEX, gridBagConstraints);

    tINT.setText("10");
    tINT.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tINTActionPerformed(evt);
      }
    });

    tINT.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tINTFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 12;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tINT, gridBagConstraints);

    tWIS.setText("10");
    tWIS.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tWISActionPerformed(evt);
      }
    });

    tWIS.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tWISFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tWIS, gridBagConstraints);

    tCHA.setText("10");
    tCHA.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tCHAActionPerformed(evt);
      }
    });

    tCHA.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tCHAFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 14;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tCHA, gridBagConstraints);

    jLabel14.setText("Fort");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    getContentPane().add(jLabel14, gridBagConstraints);

    jLabel15.setText("Reflex");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 5);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    getContentPane().add(jLabel15, gridBagConstraints);

    jLabel16.setText("Will");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    getContentPane().add(jLabel16, gridBagConstraints);

    tFortitude.setText("0");
    tFortitude.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tFortitudeActionPerformed(evt);
      }
    });

    tFortitude.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tFortitudeFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tFortitude, gridBagConstraints);

    tReflex.setText("0");
    tReflex.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tReflexActionPerformed(evt);
      }
    });

    tReflex.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tReflexFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tReflex, gridBagConstraints);

    tWill.setText("0");
    tWill.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tWillActionPerformed(evt);
      }
    });

    tWill.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tWillFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tWill, gridBagConstraints);

    jLabel51.setForeground(new java.awt.Color(204, 204, 204));
    jLabel51.setText("-20");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
    getContentPane().add(jLabel51, gridBagConstraints);

    jLabel17.setText("CR");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(jLabel17, gridBagConstraints);

    jLabel18.setText("(Note, use negative numbers for fractions. Ex: -2 = 1/2)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(jLabel18, gridBagConstraints);

    tCR.setText("1");
    tCR.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tCRActionPerformed(evt);
      }
    });

    tCR.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        tCRFocusLost(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(tCR, gridBagConstraints);

    pack();
  }//GEN-END:initComponents

	private void tCRFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tCRFocusLost
		checkField(tCR, 1);
	}//GEN-LAST:event_tCRFocusLost

	private void tCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tCRActionPerformed
		checkField(tCR, 1);
	}//GEN-LAST:event_tCRActionPerformed

	private void lNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lNumberFocusLost
		checkField(lNumber, 1);
	}//GEN-LAST:event_lNumberFocusLost

	private void lHPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lHPFocusLost
		checkField(lHP, 1);
	}//GEN-LAST:event_lHPFocusLost

	private void lBonusFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lBonusFocusLost
		checkField(lBonus, 0);
	}//GEN-LAST:event_lBonusFocusLost

	private void tWillFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tWillFocusLost
		checkField(tWill, 0);
	}//GEN-LAST:event_tWillFocusLost

	private void tReflexFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tReflexFocusLost
		checkField(tReflex, 0);
	}//GEN-LAST:event_tReflexFocusLost

	private void tFortitudeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tFortitudeFocusLost
		checkField(tFortitude, 0);
	}//GEN-LAST:event_tFortitudeFocusLost

	private void tCHAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tCHAFocusLost
		checkField(tCHA, 10);
	}//GEN-LAST:event_tCHAFocusLost

	private void tWISFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tWISFocusLost
		checkField(tWIS, 10);
	}//GEN-LAST:event_tWISFocusLost

	private void tINTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tINTFocusLost
		checkField(tINT, 10);
	}//GEN-LAST:event_tINTFocusLost

	private void tCONFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tCONFocusLost
		checkField(tCON, 10);
	}//GEN-LAST:event_tCONFocusLost

	private void tDEXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tDEXFocusLost
		checkField(tDEX, 10);
	}//GEN-LAST:event_tDEXFocusLost

	private void tSTRFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tSTRFocusLost
		checkField(tSTR, 10);
	}//GEN-LAST:event_tSTRFocusLost

	private void lNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lNumberActionPerformed
		checkField(lNumber, 1);
	}//GEN-LAST:event_lNumberActionPerformed

	private void lHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lHPActionPerformed
		checkField(lHP, 1);
	}//GEN-LAST:event_lHPActionPerformed

	private void lBonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lBonusActionPerformed
		checkField(lBonus, 0);
	}//GEN-LAST:event_lBonusActionPerformed

	private void tWillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tWillActionPerformed
		checkField(tWill, 0);
	}//GEN-LAST:event_tWillActionPerformed

	private void tReflexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tReflexActionPerformed
		checkField(tReflex, 0);
	}//GEN-LAST:event_tReflexActionPerformed

	private void tFortitudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tFortitudeActionPerformed
		checkField(tFortitude, 0);
	}//GEN-LAST:event_tFortitudeActionPerformed

	private void tCHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tCHAActionPerformed
		checkField(tCHA, 10);
	}//GEN-LAST:event_tCHAActionPerformed

	private void tWISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tWISActionPerformed
		checkField(tWIS, 10);
	}//GEN-LAST:event_tWISActionPerformed

	private void tINTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tINTActionPerformed
		checkField(tINT, 10);
	}//GEN-LAST:event_tINTActionPerformed

	private void tCONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tCONActionPerformed
		checkField(tCON, 10);
	}//GEN-LAST:event_tCONActionPerformed

	private void tDEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tDEXActionPerformed
		checkField(tDEX, 10);
	}//GEN-LAST:event_tDEXActionPerformed

	private void tSTRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tSTRActionPerformed
		checkField(tSTR, 10);
	}//GEN-LAST:event_tSTRActionPerformed


	private int checkField(javax.swing.JTextField tf, int def) {
		try {
			return new Integer(tf.getText()).intValue();
		}
		catch (NumberFormatException e) {
			tf.setText(def + "");
			return def;
		}
	}

	private void sHPMouseDragged(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sHPMouseDragged
		setHP();
	}
	//GEN-LAST:event_sHPMouseDragged


	private void sHPMouseMoved(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sHPMouseMoved
		setHP();
	}
	//GEN-LAST:event_sHPMouseMoved


	private void sHPMouseReleased(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sHPMouseReleased
		setHP();
	}
	//GEN-LAST:event_sHPMouseReleased


	private void sHPMousePressed(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sHPMousePressed
		setHP();
	}
	//GEN-LAST:event_sHPMousePressed


	private void sHPKeyReleased(java.awt.event.KeyEvent evt) {
		//GEN-FIRST:event_sHPKeyReleased
		setHP();
	}
	//GEN-LAST:event_sHPKeyReleased


	private void sHPKeyPressed(java.awt.event.KeyEvent evt) {
		//GEN-FIRST:event_sHPKeyPressed
		setHP();
	}
	//GEN-LAST:event_sHPKeyPressed


	private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {
		//GEN-FIRST:event_bSaveActionPerformed
		String comString = (String)cType.getSelectedItem();
		if(comString.equals("Non Combatant")) {
			comString = "-";
		}
		// If we are creating multiple guys, loop
		if(checkField(lNumber, 1) > 1) {
			for (int i = 1; i <= checkField(lNumber, 1); i++) {
				initiative.initList.add(new XMLCombatant(tName.getText() + " (" + i + ")", tPlayer.getText(), checkField(tSTR, 10), checkField(tDEX, 10), checkField(tCON, 10), checkField(tINT, 10), checkField(tWIS, 10), checkField(tCHA, 10), checkField(tFortitude, 0), checkField(tReflex, 0), checkField(tWill, 0), checkField(lHP, 1), checkField(lHP, 1), 0, checkField(lBonus, 0), comString, checkField(tCR, 0)));
			}
		}
		// If if not, just add one
		else {
			initiative.initList.add(new XMLCombatant(tName.getText(), tPlayer.getText(), checkField(tSTR, 10), checkField(tDEX, 10), checkField(tCON, 10), checkField(tINT, 10), checkField(tWIS, 10), checkField(tCHA, 10), checkField(tFortitude, 0), checkField(tReflex, 0), checkField(tWill, 0), checkField(lHP, 1), checkField(lHP, 1), 0, checkField(lBonus, 0), comString, checkField(tCR, 0)));
		}
		initiative.refreshTable();
		initiative.focusRoll();
		setVisible(false);
		dispose();
	}
	//GEN-LAST:event_bSaveActionPerformed


	private void sNumberKeyReleased(java.awt.event.KeyEvent evt) {
		//GEN-FIRST:event_sNumberKeyReleased
		setNumber();
	}
	//GEN-LAST:event_sNumberKeyReleased


	private void sNumberKeyPressed(java.awt.event.KeyEvent evt) {
		//GEN-FIRST:event_sNumberKeyPressed
		setNumber();
	}
	//GEN-LAST:event_sNumberKeyPressed


	private void sNumberMouseReleased(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sNumberMouseReleased
		setNumber();
	}
	//GEN-LAST:event_sNumberMouseReleased


	private void sNumberMousePressed(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sNumberMousePressed
		setNumber();
	}
	//GEN-LAST:event_sNumberMousePressed


	private void sNumberMouseDragged(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sNumberMouseDragged
		setNumber();
	}
	//GEN-LAST:event_sNumberMouseDragged


	private void sNumberMouseMoved(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sNumberMouseMoved
		setNumber();
	}
	//GEN-LAST:event_sNumberMouseMoved


	private void sBonusMouseDragged(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sBonusMouseDragged
		setBonus();
	}
	//GEN-LAST:event_sBonusMouseDragged


	private void sBonusMouseMoved(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sBonusMouseMoved
		setBonus();
	}
	//GEN-LAST:event_sBonusMouseMoved


	private void sBonusKeyReleased(java.awt.event.KeyEvent evt) {
		//GEN-FIRST:event_sBonusKeyReleased
		setBonus();
	}
	//GEN-LAST:event_sBonusKeyReleased


	private void sBonusKeyPressed(java.awt.event.KeyEvent evt) {
		//GEN-FIRST:event_sBonusKeyPressed
		setBonus();
	}
	//GEN-LAST:event_sBonusKeyPressed


	private void sBonusMouseReleased(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sBonusMouseReleased
		setBonus();
	}
	//GEN-LAST:event_sBonusMouseReleased


	private void sBonusMousePressed(java.awt.event.MouseEvent evt) {
		//GEN-FIRST:event_sBonusMousePressed
		setBonus();
	}
	//GEN-LAST:event_sBonusMousePressed


	private void sBonusPropertyChange(java.beans.PropertyChangeEvent evt) {
		//GEN-FIRST:event_sBonusPropertyChange
		setBonus();
	}
	//GEN-LAST:event_sBonusPropertyChange


	private void sNumberPropertyChange(java.beans.PropertyChangeEvent evt) {
		//GEN-FIRST:event_sNumberPropertyChange
		setNumber();
	}
	//GEN-LAST:event_sNumberPropertyChange

	private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {
		//GEN-FIRST:event_bCancelActionPerformed
		setVisible(false);
		dispose();
	}
	//GEN-LAST:event_bCancelActionPerformed

	private void initDropDown() {
		java.util.Vector vType = new java.util.Vector();
		vType.add("Enemy");
		vType.add("Ally");
		vType.add("PC");
		vType.add("Non Combatant");
		javax.swing.DefaultComboBoxModel typeModel = new javax.swing.DefaultComboBoxModel(vType);
		cType.setModel(typeModel);
	}

	/**
	 *  Closes the dialog
	 *
	 *@param  evt  The close event
	 */
	private void closeDialog(java.awt.event.WindowEvent evt) {
		//GEN-FIRST:event_closeDialog
		setVisible(false);
		dispose();
	}
	//GEN-LAST:event_closeDialog


	/**  Sets the bonus label of the dialog */
	private void setBonus() {
		lBonus.setText("" + sBonus.getValue());
	}


	/**  Sets the number label of the dialog */
	private void setNumber() {
		lNumber.setText("" + sNumber.getValue());
	}


	/**  Sets the hit points label of the dialog */
	private void setHP() {
		lHP.setText("" + sHP.getValue());
	}


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JButton bSave;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JTextField tWill;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JTextField tCR;
  private javax.swing.JTextField tPlayer;
  private javax.swing.JTextField tReflex;
  private javax.swing.JTextField tINT;
  private javax.swing.JTextField lBonus;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel14;
  private javax.swing.JLabel jLabel51;
  private javax.swing.JTextField tFortitude;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JSlider sBonus;
  private javax.swing.JSlider sHP;
  private javax.swing.JLabel jLabel16;
  private javax.swing.JTextField tCHA;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JComboBox cType;
  private javax.swing.JTextField tSTR;
  private javax.swing.JTextField lHP;
  private javax.swing.JTextField tName;
  private javax.swing.JTextField tCON;
  private javax.swing.JLabel jLabel18;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel17;
  private javax.swing.JTextField tWIS;
  private javax.swing.JSlider sNumber;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JTextField lNumber;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JTextField tDEX;
  private javax.swing.JLabel jLabel15;
  private javax.swing.JButton bCancel;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel5;
  // End of variables declaration//GEN-END:variables
	/**  Description of the Field */
	public Initiative initiative;
	//private Preferences initPrefs = Preferences.userNodeForPackage(Initiative.class);
}

