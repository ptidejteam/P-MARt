java -classpath ..\..\emma-2.0.5312\out\emma.jar emmarun -f -r arff -sp mozilla\js\rhino\src -Dreport.out.file mozilla\js\tests\ecma_2\String\15.5.4.14-3.compiled.arff -classpath mozilla\js\rhino\build\classes org.mozilla.javascript.tools.shell.Main -opt 0 -f mozilla\js\tests\shell.js -f mozilla\js\tests\ecma_2\shell.js -f mozilla\js\tests\ecma_2\String\shell.js -f mozilla\js\tests\ecma_2\String\15.5.4.14-3.js  
EMMA: processing classpath ...
EMMA: [128 class(es) processed in 344 ms]
ecma_2/String/split-003.js String.prototype.split( regexp, [,limit] )
( hello ).split(new RegExp).constructor == Array = true PASSED!
( hello ).split(new RegExp).length = 5 PASSED!
( hello ).split(new RegExp)[0] = h PASSED!
( hello ).split(new RegExp)[1] = e PASSED!
( hello ).split(new RegExp)[2] = l PASSED!
( hello ).split(new RegExp)[3] = l PASSED!
( hello ).split(new RegExp)[4] = o PASSED!
( hello ).split(/l/).constructor == Array = true PASSED!
( hello ).split(/l/).length = 3 PASSED!
( hello ).split(/l/)[0] = he PASSED!
( hello ).split(/l/)[1] =  PASSED!
( hello ).split(/l/)[2] = o PASSED!
( hello ).split(/l/, 0 ).constructor == Array = true PASSED!
( hello ).split(/l/, 0 ).length = 0 PASSED!
( hello ).split(/l/, 1 ).constructor == Array = true PASSED!
( hello ).split(/l/, 1 ).length = 1 PASSED!
( hello ).split(/l/, 1 )[0] = he PASSED!
( hello ).split(/l/, 2 ).constructor == Array = true PASSED!
( hello ).split(/l/, 2 ).length = 2 PASSED!
( hello ).split(/l/, 2 )[0] = he PASSED!
( hello ).split(/l/, 2 )[1] =  PASSED!
( hello ).split(/l/, 3 ).constructor == Array = true PASSED!
( hello ).split(/l/, 3 ).length = 3 PASSED!
( hello ).split(/l/, 3 )[0] = he PASSED!
( hello ).split(/l/, 3 )[1] =  PASSED!
( hello ).split(/l/, 3 )[2] = o PASSED!
( hello ).split(/l/, 4 ).constructor == Array = true PASSED!
( hello ).split(/l/, 4 ).length = 3 PASSED!
( hello ).split(/l/, 4 )[0] = he PASSED!
( hello ).split(/l/, 4 )[1] =  PASSED!
( hello ).split(/l/, 4 )[2] = o PASSED!
( hello ).split(/l/, undefined ).constructor == Array = true PASSED!
( hello ).split(/l/, undefined ).length = 3 PASSED!
( hello ).split(/l/, undefined )[0] = he PASSED!
( hello ).split(/l/, undefined )[1] =  PASSED!
( hello ).split(/l/, undefined )[2] = o PASSED!
( hello ).split(/l/, hi ).constructor == Array = true PASSED!
( hello ).split(/l/, hi ).length = 0 PASSED!
( hello ).split(/l/, undefined ).constructor == Array = true PASSED!
( hello ).split(/l/, undefined ).length = 3 PASSED!
( hello ).split(/l/, undefined )[0] = he PASSED!
( hello ).split(/l/, undefined )[1] =  PASSED!
( hello ).split(/l/, undefined )[2] = o PASSED!
( hello ).split(new RegExp).constructor == Array = true PASSED!
( hello ).split(new RegExp).length = 5 PASSED!
( hello ).split(new RegExp)[0] = h PASSED!
( hello ).split(new RegExp)[1] = e PASSED!
( hello ).split(new RegExp)[2] = l PASSED!
( hello ).split(new RegExp)[3] = l PASSED!
( hello ).split(new RegExp)[4] = o PASSED!
( hello ).split(new RegExp, 0 ).constructor == Array = true PASSED!
( hello ).split(new RegExp, 0 ).length = 0 PASSED!
( hello ).split(new RegExp, 1 ).constructor == Array = true PASSED!
( hello ).split(new RegExp, 1 ).length = 1 PASSED!
( hello ).split(new RegExp, 1 )[0] = h PASSED!
( hello ).split(new RegExp, 2 ).constructor == Array = true PASSED!
( hello ).split(new RegExp, 2 ).length = 2 PASSED!
( hello ).split(new RegExp, 2 )[0] = h PASSED!
( hello ).split(new RegExp, 2 )[1] = e PASSED!
( hello ).split(new RegExp, 3 ).constructor == Array = true PASSED!
( hello ).split(new RegExp, 3 ).length = 3 PASSED!
( hello ).split(new RegExp, 3 )[0] = h PASSED!
( hello ).split(new RegExp, 3 )[1] = e PASSED!
( hello ).split(new RegExp, 3 )[2] = l PASSED!
( hello ).split(new RegExp, 4 ).constructor == Array = true PASSED!
( hello ).split(new RegExp, 4 ).length = 4 PASSED!
( hello ).split(new RegExp, 4 )[0] = h PASSED!
( hello ).split(new RegExp, 4 )[1] = e PASSED!
( hello ).split(new RegExp, 4 )[2] = l PASSED!
( hello ).split(new RegExp, 4 )[3] = l PASSED!
( hello ).split(new RegExp, undefined ).constructor == Array = true PASSED!
( hello ).split(new RegExp, undefined ).length = 5 PASSED!
( hello ).split(new RegExp, undefined )[0] = h PASSED!
( hello ).split(new RegExp, undefined )[1] = e PASSED!
( hello ).split(new RegExp, undefined )[2] = l PASSED!
( hello ).split(new RegExp, undefined )[3] = l PASSED!
( hello ).split(new RegExp, undefined )[4] = o PASSED!
( hello ).split(new RegExp, hi ).constructor == Array = true PASSED!
( hello ).split(new RegExp, hi ).length = 0 PASSED!
( hello ).split(new RegExp, undefined ).constructor == Array = true PASSED!
( hello ).split(new RegExp, undefined ).length = 5 PASSED!
( hello ).split(new RegExp, undefined )[0] = h PASSED!
( hello ).split(new RegExp, undefined )[1] = e PASSED!
( hello ).split(new RegExp, undefined )[2] = l PASSED!
( hello ).split(new RegExp, undefined )[3] = l PASSED!
( hello ).split(new RegExp, undefined )[4] = o PASSED!
EMMA: writing [arff] report to [C:\PROJECTS\concerntagger_1.5.3\tests\Rhino\mozilla\js\tests\ecma_2\String\15.5.4.14-3.compiled.arff] ...
