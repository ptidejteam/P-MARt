@RELATION "Emma Method Coverage Report"

@ATTRIBUTE method_name string

@DATA
"org.mozilla.javascript.Arguments.Arguments(NativeCall)"
"org.mozilla.javascript.BaseFunction.<static initializer>"
"org.mozilla.javascript.BaseFunction.BaseFunction()"
"org.mozilla.javascript.BaseFunction.BaseFunction(Scriptable, Scriptable)"
"org.mozilla.javascript.BaseFunction.construct(Context, Scriptable, Object[])"
"org.mozilla.javascript.BaseFunction.createObject(Context, Scriptable)"
"org.mozilla.javascript.BaseFunction.fillConstructorProperties(IdFunctionObject)"
"org.mozilla.javascript.BaseFunction.findInstanceIdInfo(String)"
"org.mozilla.javascript.BaseFunction.findPrototypeId(String)"
"org.mozilla.javascript.BaseFunction.getClassName()"
"org.mozilla.javascript.BaseFunction.getClassPrototype()"
"org.mozilla.javascript.BaseFunction.getInstanceIdValue(int)"
"org.mozilla.javascript.BaseFunction.getPrototypeProperty()"
"org.mozilla.javascript.BaseFunction.init(Scriptable, boolean)"
"org.mozilla.javascript.BaseFunction.initPrototypeId(int)"
"org.mozilla.javascript.BaseFunction.setImmunePrototypeProperty(Object)"
"org.mozilla.javascript.BaseFunction.setupDefaultPrototype()"
"org.mozilla.javascript.ClassCache.<static initializer>"
"org.mozilla.javascript.ClassCache.ClassCache()"
"org.mozilla.javascript.ClassCache.associate(ScriptableObject)"
"org.mozilla.javascript.CompilerEnvirons.CompilerEnvirons()"
"org.mozilla.javascript.CompilerEnvirons.getErrorReporter()"
"org.mozilla.javascript.CompilerEnvirons.getLanguageVersion()"
"org.mozilla.javascript.CompilerEnvirons.initFromContext(Context)"
"org.mozilla.javascript.CompilerEnvirons.isGeneratingSource()"
"org.mozilla.javascript.CompilerEnvirons.isUseDynamicScope()"
"org.mozilla.javascript.CompilerEnvirons.isXmlAvailable()"
"org.mozilla.javascript.CompilerEnvirons.setErrorReporter(ErrorReporter)"
"org.mozilla.javascript.Context.<static initializer>"
"org.mozilla.javascript.Context.Context()"
"org.mozilla.javascript.Context.call(ContextFactory, ContextAction)"
"org.mozilla.javascript.Context.checkLanguageVersion(int)"
"org.mozilla.javascript.Context.checkOptimizationLevel(int)"
"org.mozilla.javascript.Context.compileImpl(Scriptable, Reader, String, String, int, Object, boolean, Interpreter, ErrorReporter)"
"org.mozilla.javascript.Context.compileString(String, Interpreter, ErrorReporter, String, int, Object)"
"org.mozilla.javascript.Context.compileString(String, String, int, Object)"
"org.mozilla.javascript.Context.createCompiler()"
"org.mozilla.javascript.Context.getContext()"
"org.mozilla.javascript.Context.getCurrentContext()"
"org.mozilla.javascript.Context.getErrorReporter()"
"org.mozilla.javascript.Context.getFactory()"
"org.mozilla.javascript.Context.getLanguageVersion()"
"org.mozilla.javascript.Context.getMaximumInterpreterStackDepth()"
"org.mozilla.javascript.Context.getOptimizationLevel()"
"org.mozilla.javascript.Context.getRegExpProxy()"
"org.mozilla.javascript.Context.getSecurityController()"
"org.mozilla.javascript.Context.getUndefinedValue()"
"org.mozilla.javascript.Context.hasFeature(int)"
"org.mozilla.javascript.Context.initStandardObjects(ScriptableObject, boolean)"
"org.mozilla.javascript.Context.isGeneratingDebugChanged()"
"org.mozilla.javascript.Context.isGeneratingSource()"
"org.mozilla.javascript.Context.isValidLanguageVersion(int)"
"org.mozilla.javascript.Context.isValidOptimizationLevel(int)"
"org.mozilla.javascript.Context.isVersionECMA1()"
"org.mozilla.javascript.Context.newArray(Scriptable, Object[])"
"org.mozilla.javascript.Context.newArray(Scriptable, int)"
"org.mozilla.javascript.Context.prepareNewContext(ContextFactory, Object)"
"org.mozilla.javascript.Context.releaseContext(Object, Context)"
"org.mozilla.javascript.Context.setErrorReporter(ErrorReporter)"
"org.mozilla.javascript.Context.setLanguageVersion(int)"
"org.mozilla.javascript.Context.setOptimizationLevel(int)"
"org.mozilla.javascript.Context.toNumber(Object)"
"org.mozilla.javascript.Context.toString(Object)"
"org.mozilla.javascript.ContextFactory.<static initializer>"
"org.mozilla.javascript.ContextFactory.ContextFactory()"
"org.mozilla.javascript.ContextFactory.call(ContextAction)"
"org.mozilla.javascript.ContextFactory.checkNotSealed()"
"org.mozilla.javascript.ContextFactory.doTopCall(Callable, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.ContextFactory.hasFeature(Context, int)"
"org.mozilla.javascript.ContextFactory.isSealed()"
"org.mozilla.javascript.ContextFactory.makeContext()"
"org.mozilla.javascript.ContextFactory.onContextCreated(Context)"
"org.mozilla.javascript.ContextFactory.onContextReleased(Context)"
"org.mozilla.javascript.DToA.<static initializer>"
"org.mozilla.javascript.DToA.JS_dtoa(double, int, boolean, int, boolean[], StringBuffer)"
"org.mozilla.javascript.DToA.JS_dtostr(StringBuffer, int, int, double)"
"org.mozilla.javascript.DToA.d2b(double, int[], int[])"
"org.mozilla.javascript.DToA.lo0bits(int)"
"org.mozilla.javascript.DToA.setWord0(double, int)"
"org.mozilla.javascript.DToA.stuffBits(byte[], int, int)"
"org.mozilla.javascript.DToA.word0(double)"
"org.mozilla.javascript.Decompiler.Decompiler()"
"org.mozilla.javascript.Decompiler.addEOL(int)"
"org.mozilla.javascript.Decompiler.addName(String)"
"org.mozilla.javascript.Decompiler.addNumber(double)"
"org.mozilla.javascript.Decompiler.addRegexp(String, String)"
"org.mozilla.javascript.Decompiler.addString(String)"
"org.mozilla.javascript.Decompiler.addToken(int)"
"org.mozilla.javascript.Decompiler.append(char)"
"org.mozilla.javascript.Decompiler.appendString(String)"
"org.mozilla.javascript.Decompiler.getCurrentOffset()"
"org.mozilla.javascript.Decompiler.getEncodedSource()"
"org.mozilla.javascript.Decompiler.increaseSourceCapacity(int)"
"org.mozilla.javascript.Decompiler.markFunctionEnd(int)"
"org.mozilla.javascript.Decompiler.markFunctionStart(int)"
"org.mozilla.javascript.Decompiler.sourceToString(int)"
"org.mozilla.javascript.DefaultErrorReporter.<static initializer>"
"org.mozilla.javascript.DefaultErrorReporter.DefaultErrorReporter()"
"org.mozilla.javascript.FunctionNode.FunctionNode(String)"
"org.mozilla.javascript.FunctionNode.getFunctionName()"
"org.mozilla.javascript.FunctionNode.getFunctionType()"
"org.mozilla.javascript.FunctionNode.getIgnoreDynamicScope()"
"org.mozilla.javascript.FunctionNode.requiresActivation()"
"org.mozilla.javascript.FunctionObject.FunctionObject(String, Member, Scriptable)"
"org.mozilla.javascript.FunctionObject.addAsConstructor(Scriptable, Scriptable)"
"org.mozilla.javascript.FunctionObject.call(Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.FunctionObject.convertArg(Context, Scriptable, Object, int)"
"org.mozilla.javascript.FunctionObject.findSingleMethod(Method[], String)"
"org.mozilla.javascript.FunctionObject.getMethodList(Class)"
"org.mozilla.javascript.FunctionObject.getTypeTag(Class)"
"org.mozilla.javascript.FunctionObject.isVarArgsMethod()"
"org.mozilla.javascript.IRFactory.IRFactory(Parser)"
"org.mozilla.javascript.IRFactory.addChildToBack(Node, Node)"
"org.mozilla.javascript.IRFactory.checkActivationName(String, int)"
"org.mozilla.javascript.IRFactory.createArrayLiteral(ObjArray, int)"
"org.mozilla.javascript.IRFactory.createAssignment(int, Node, Node)"
"org.mozilla.javascript.IRFactory.createBinary(int, Node, Node)"
"org.mozilla.javascript.IRFactory.createBlock(int)"
"org.mozilla.javascript.IRFactory.createBreak(Node, int)"
"org.mozilla.javascript.IRFactory.createCallOrNew(int, Node)"
"org.mozilla.javascript.IRFactory.createCatch(String, Node, Node, int)"
"org.mozilla.javascript.IRFactory.createCondExpr(Node, Node, Node)"
"org.mozilla.javascript.IRFactory.createElementGet(Node, String, Node, int)"
"org.mozilla.javascript.IRFactory.createExprStatement(Node, int)"
"org.mozilla.javascript.IRFactory.createFor(Node, Node, Node, Node, Node)"
"org.mozilla.javascript.IRFactory.createForIn(Node, Node, Node, Node, boolean)"
"org.mozilla.javascript.IRFactory.createFunction(String)"
"org.mozilla.javascript.IRFactory.createIf(Node, Node, Node, int)"
"org.mozilla.javascript.IRFactory.createIncDec(int, boolean, Node)"
"org.mozilla.javascript.IRFactory.createLeaf(int)"
"org.mozilla.javascript.IRFactory.createLoop(Node$Jump, int, Node, Node, Node, Node)"
"org.mozilla.javascript.IRFactory.createLoopNode(Node, int)"
"org.mozilla.javascript.IRFactory.createName(String)"
"org.mozilla.javascript.IRFactory.createNumber(double)"
"org.mozilla.javascript.IRFactory.createObjectLiteral(ObjArray)"
"org.mozilla.javascript.IRFactory.createPropertyGet(Node, String, String, int)"
"org.mozilla.javascript.IRFactory.createRegExp(int)"
"org.mozilla.javascript.IRFactory.createReturn(Node, int)"
"org.mozilla.javascript.IRFactory.createScript()"
"org.mozilla.javascript.IRFactory.createString(String)"
"org.mozilla.javascript.IRFactory.createThrow(Node, int)"
"org.mozilla.javascript.IRFactory.createTryCatchFinally(Node, Node, Node, int)"
"org.mozilla.javascript.IRFactory.createUnary(int, Node)"
"org.mozilla.javascript.IRFactory.createUseLocal(Node)"
"org.mozilla.javascript.IRFactory.createVariables(int)"
"org.mozilla.javascript.IRFactory.createWhile(Node, Node, Node)"
"org.mozilla.javascript.IRFactory.createWith(Node, Node, int)"
"org.mozilla.javascript.IRFactory.initFunction(FunctionNode, int, Node, int)"
"org.mozilla.javascript.IRFactory.initScript(ScriptOrFnNode, Node)"
"org.mozilla.javascript.IRFactory.isAlwaysDefinedBoolean(Node)"
"org.mozilla.javascript.IRFactory.makeJump(int, Node)"
"org.mozilla.javascript.IRFactory.makeReference(Node)"
"org.mozilla.javascript.IRFactory.setRequiresActivation()"
"org.mozilla.javascript.IRFactory.simpleAssignment(Node, Node)"
"org.mozilla.javascript.IdFunctionObject.IdFunctionObject(IdFunctionCall, Object, int, String, int, Scriptable)"
"org.mozilla.javascript.IdFunctionObject.addAsProperty(Scriptable)"
"org.mozilla.javascript.IdFunctionObject.call(Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.IdFunctionObject.createObject(Context, Scriptable)"
"org.mozilla.javascript.IdFunctionObject.exportAsScopeProperty()"
"org.mozilla.javascript.IdFunctionObject.hasTag(Object)"
"org.mozilla.javascript.IdFunctionObject.initFunction(String, Scriptable)"
"org.mozilla.javascript.IdFunctionObject.markAsConstructor(Scriptable)"
"org.mozilla.javascript.IdFunctionObject.methodId()"
"org.mozilla.javascript.IdScriptableObject$PrototypeValues.IdScriptableObject$PrototypeValues(IdScriptableObject, int)"
"org.mozilla.javascript.IdScriptableObject$PrototypeValues.createPrecachedConstructor()"
"org.mozilla.javascript.IdScriptableObject$PrototypeValues.delete(int)"
"org.mozilla.javascript.IdScriptableObject$PrototypeValues.ensureId(int)"
"org.mozilla.javascript.IdScriptableObject$PrototypeValues.findId(String)"
"org.mozilla.javascript.IdScriptableObject$PrototypeValues.get(int)"
"org.mozilla.javascript.IdScriptableObject$PrototypeValues.initSlot(int, String, Object, int)"
"org.mozilla.javascript.IdScriptableObject$PrototypeValues.initValue(int, String, Object, int)"
"org.mozilla.javascript.IdScriptableObject.IdScriptableObject()"
"org.mozilla.javascript.IdScriptableObject.IdScriptableObject(Scriptable, Scriptable)"
"org.mozilla.javascript.IdScriptableObject.activatePrototypeMap(int)"
"org.mozilla.javascript.IdScriptableObject.addIdFunctionProperty(Scriptable, Object, int, String, int)"
"org.mozilla.javascript.IdScriptableObject.delete(String)"
"org.mozilla.javascript.IdScriptableObject.exportAsJSClass(int, Scriptable, boolean)"
"org.mozilla.javascript.IdScriptableObject.fillConstructorProperties(IdFunctionObject)"
"org.mozilla.javascript.IdScriptableObject.findInstanceIdInfo(String)"
"org.mozilla.javascript.IdScriptableObject.get(String, Scriptable)"
"org.mozilla.javascript.IdScriptableObject.has(String, Scriptable)"
"org.mozilla.javascript.IdScriptableObject.initPrototypeMethod(Object, int, String, int)"
"org.mozilla.javascript.IdScriptableObject.instanceIdInfo(int, int)"
"org.mozilla.javascript.IdScriptableObject.newIdFunction(Object, int, String, int, Scriptable)"
"org.mozilla.javascript.IdScriptableObject.put(String, Scriptable, Object)"
"org.mozilla.javascript.IdScriptableObject.setAttributes(String, int)"
"org.mozilla.javascript.ImporterTopLevel.<static initializer>"
"org.mozilla.javascript.ImporterTopLevel.ImporterTopLevel()"
"org.mozilla.javascript.ImporterTopLevel.findPrototypeId(String)"
"org.mozilla.javascript.ImporterTopLevel.get(String, Scriptable)"
"org.mozilla.javascript.ImporterTopLevel.getClassName()"
"org.mozilla.javascript.ImporterTopLevel.getPackageProperty(String, Scriptable)"
"org.mozilla.javascript.ImporterTopLevel.has(String, Scriptable)"
"org.mozilla.javascript.ImporterTopLevel.initPrototypeId(int)"
"org.mozilla.javascript.ImporterTopLevel.initStandardObjects(Context, boolean)"
"org.mozilla.javascript.InterpretedFunction.InterpretedFunction(InterpretedFunction, int)"
"org.mozilla.javascript.InterpretedFunction.InterpretedFunction(InterpreterData, Object)"
"org.mozilla.javascript.InterpretedFunction.call(Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.InterpretedFunction.createFunction(Context, Scriptable, InterpretedFunction, int)"
"org.mozilla.javascript.InterpretedFunction.createRegExpWraps(Context, Scriptable)"
"org.mozilla.javascript.InterpretedFunction.createScript(InterpreterData, Object)"
"org.mozilla.javascript.InterpretedFunction.exec(Context, Scriptable)"
"org.mozilla.javascript.InterpretedFunction.getFunctionName()"
"org.mozilla.javascript.InterpretedFunction.getLanguageVersion()"
"org.mozilla.javascript.InterpretedFunction.getParamAndVarCount()"
"org.mozilla.javascript.InterpretedFunction.getParamCount()"
"org.mozilla.javascript.InterpretedFunction.getParamOrVarName(int)"
"org.mozilla.javascript.InterpretedFunction.initInterpretedFunction(Context, Scriptable)"
"org.mozilla.javascript.Interpreter$CallFrame.Interpreter$CallFrame()"
"org.mozilla.javascript.Interpreter$CallFrame.Interpreter$CallFrame(Interpreter$CallFrame)"
"org.mozilla.javascript.Interpreter.Interpreter()"
"org.mozilla.javascript.Interpreter.addBackwardGoto(int, int)"
"org.mozilla.javascript.Interpreter.addExceptionHandler(int, int, int, boolean, int, int)"
"org.mozilla.javascript.Interpreter.addGoto(Node, int)"
"org.mozilla.javascript.Interpreter.addGotoOp(int)"
"org.mozilla.javascript.Interpreter.addIcode(int)"
"org.mozilla.javascript.Interpreter.addIndexOp(int, int)"
"org.mozilla.javascript.Interpreter.addIndexPrefix(int)"
"org.mozilla.javascript.Interpreter.addInt(int)"
"org.mozilla.javascript.Interpreter.addStringOp(int, String)"
"org.mozilla.javascript.Interpreter.addStringPrefix(String)"
"org.mozilla.javascript.Interpreter.addToken(int)"
"org.mozilla.javascript.Interpreter.addUint16(int)"
"org.mozilla.javascript.Interpreter.addUint8(int)"
"org.mozilla.javascript.Interpreter.addVarOp(int, int)"
"org.mozilla.javascript.Interpreter.allocLocal()"
"org.mozilla.javascript.Interpreter.compile(CompilerEnvirons, ScriptOrFnNode, String, boolean)"
"org.mozilla.javascript.Interpreter.createScriptObject(Object, Object)"
"org.mozilla.javascript.Interpreter.do_add(Object[], double[], int, Context)"
"org.mozilla.javascript.Interpreter.enterFrame(Context, Interpreter$CallFrame, Object[])"
"org.mozilla.javascript.Interpreter.exitFrame(Context, Interpreter$CallFrame, Object)"
"org.mozilla.javascript.Interpreter.fixLabelGotos()"
"org.mozilla.javascript.Interpreter.generateCallFunAndThis(Node)"
"org.mozilla.javascript.Interpreter.generateFunctionICode()"
"org.mozilla.javascript.Interpreter.generateICodeFromTree(Node)"
"org.mozilla.javascript.Interpreter.generateNestedFunctions()"
"org.mozilla.javascript.Interpreter.generateRegExpLiterals()"
"org.mozilla.javascript.Interpreter.getArgsArray(Object[], double[], int, int)"
"org.mozilla.javascript.Interpreter.getDoubleIndex(double)"
"org.mozilla.javascript.Interpreter.getInt(byte[], int)"
"org.mozilla.javascript.Interpreter.getLocalBlockRef(Node)"
"org.mozilla.javascript.Interpreter.getShort(byte[], int)"
"org.mozilla.javascript.Interpreter.getTargetLabel(Node)"
"org.mozilla.javascript.Interpreter.increaseICodeCapasity(int)"
"org.mozilla.javascript.Interpreter.initFrame(Context, Scriptable, Scriptable, Object[], double[], int, int, InterpretedFunction, Interpreter$CallFrame, Interpreter$CallFrame)"
"org.mozilla.javascript.Interpreter.initFunction(Context, Scriptable, InterpretedFunction, int)"
"org.mozilla.javascript.Interpreter.interpret(InterpretedFunction, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.Interpreter.interpretLoop(Context, Interpreter$CallFrame, Object)"
"org.mozilla.javascript.Interpreter.markTargetLabel(Node)"
"org.mozilla.javascript.Interpreter.releaseLocal(int)"
"org.mozilla.javascript.Interpreter.resolveForwardGoto(int)"
"org.mozilla.javascript.Interpreter.resolveGoto(int, int)"
"org.mozilla.javascript.Interpreter.setCallResult(Interpreter$CallFrame, Object, double)"
"org.mozilla.javascript.Interpreter.stackChange(int)"
"org.mozilla.javascript.Interpreter.stack_boolean(Interpreter$CallFrame, int)"
"org.mozilla.javascript.Interpreter.stack_double(Interpreter$CallFrame, int)"
"org.mozilla.javascript.Interpreter.updateLineNumber(Node)"
"org.mozilla.javascript.Interpreter.validIcode(int)"
"org.mozilla.javascript.Interpreter.validTokenCode(int)"
"org.mozilla.javascript.Interpreter.visitExpression(Node, int)"
"org.mozilla.javascript.Interpreter.visitIncDec(Node, Node)"
"org.mozilla.javascript.Interpreter.visitLiteral(Node, Node)"
"org.mozilla.javascript.Interpreter.visitStatement(Node)"
"org.mozilla.javascript.InterpreterData.InterpreterData(InterpreterData)"
"org.mozilla.javascript.InterpreterData.InterpreterData(int, String, String)"
"org.mozilla.javascript.InterpreterData.init()"
"org.mozilla.javascript.Kit.<static initializer>"
"org.mozilla.javascript.Kit.classOrNull(String)"
"org.mozilla.javascript.Kit.getListener(Object, int)"
"org.mozilla.javascript.Kit.initHash(Hashtable, Object, Object)"
"org.mozilla.javascript.Kit.newInstanceOrNull(Class)"
"org.mozilla.javascript.Kit.readStream(InputStream, int)"
"org.mozilla.javascript.Kit.semicolonSplit(String)"
"org.mozilla.javascript.Kit.xDigitToInt(int, int)"
"org.mozilla.javascript.LazilyLoadedCtor.LazilyLoadedCtor(ScriptableObject, String, String, boolean)"
"org.mozilla.javascript.LazilyLoadedCtor.getProperty(ScriptableObject)"
"org.mozilla.javascript.LazilyLoadedCtor.setProperty(ScriptableObject, Object)"
"org.mozilla.javascript.MemberBox.<static initializer>"
"org.mozilla.javascript.MemberBox.MemberBox(Constructor)"
"org.mozilla.javascript.MemberBox.MemberBox(Method)"
"org.mozilla.javascript.MemberBox.getDeclaringClass()"
"org.mozilla.javascript.MemberBox.getName()"
"org.mozilla.javascript.MemberBox.init(Constructor)"
"org.mozilla.javascript.MemberBox.init(Method)"
"org.mozilla.javascript.MemberBox.invoke(Object, Object[])"
"org.mozilla.javascript.MemberBox.isMethod()"
"org.mozilla.javascript.MemberBox.isStatic()"
"org.mozilla.javascript.MemberBox.method()"
"org.mozilla.javascript.NativeArray.<static initializer>"
"org.mozilla.javascript.NativeArray.NativeArray()"
"org.mozilla.javascript.NativeArray.NativeArray(Object[])"
"org.mozilla.javascript.NativeArray.NativeArray(long)"
"org.mozilla.javascript.NativeArray.execIdCall(IdFunctionObject, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.NativeArray.findInstanceIdInfo(String)"
"org.mozilla.javascript.NativeArray.findPrototypeId(String)"
"org.mozilla.javascript.NativeArray.get(int, Scriptable)"
"org.mozilla.javascript.NativeArray.getClassName()"
"org.mozilla.javascript.NativeArray.getInstanceIdValue(int)"
"org.mozilla.javascript.NativeArray.has(int, Scriptable)"
"org.mozilla.javascript.NativeArray.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeArray.initPrototypeId(int)"
"org.mozilla.javascript.NativeArray.jsConstructor(Context, Scriptable, Object[])"
"org.mozilla.javascript.NativeArray.put(int, Scriptable, Object)"
"org.mozilla.javascript.NativeBoolean.<static initializer>"
"org.mozilla.javascript.NativeBoolean.NativeBoolean(boolean)"
"org.mozilla.javascript.NativeBoolean.findPrototypeId(String)"
"org.mozilla.javascript.NativeBoolean.getClassName()"
"org.mozilla.javascript.NativeBoolean.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeBoolean.initPrototypeId(int)"
"org.mozilla.javascript.NativeCall.<static initializer>"
"org.mozilla.javascript.NativeCall.NativeCall()"
"org.mozilla.javascript.NativeCall.NativeCall(NativeFunction, Scriptable, Object[])"
"org.mozilla.javascript.NativeCall.findPrototypeId(String)"
"org.mozilla.javascript.NativeCall.getClassName()"
"org.mozilla.javascript.NativeCall.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeCall.initPrototypeId(int)"
"org.mozilla.javascript.NativeDate.<static initializer>"
"org.mozilla.javascript.NativeDate.DayFromMonth(int, int)"
"org.mozilla.javascript.NativeDate.DayFromYear(double)"
"org.mozilla.javascript.NativeDate.DaylightSavingTA(double)"
"org.mozilla.javascript.NativeDate.LocalTime(double)"
"org.mozilla.javascript.NativeDate.MakeDate(double, double)"
"org.mozilla.javascript.NativeDate.MakeDay(double, double, double)"
"org.mozilla.javascript.NativeDate.MakeTime(double, double, double, double)"
"org.mozilla.javascript.NativeDate.NativeDate()"
"org.mozilla.javascript.NativeDate.TimeClip(double)"
"org.mozilla.javascript.NativeDate.TimeFromYear(double)"
"org.mozilla.javascript.NativeDate.execIdCall(IdFunctionObject, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.NativeDate.fillConstructorProperties(IdFunctionObject)"
"org.mozilla.javascript.NativeDate.findPrototypeId(String)"
"org.mozilla.javascript.NativeDate.getClassName()"
"org.mozilla.javascript.NativeDate.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeDate.initPrototypeId(int)"
"org.mozilla.javascript.NativeDate.internalUTC(double)"
"org.mozilla.javascript.NativeDate.jsConstructor(Object[])"
"org.mozilla.javascript.NativeDate.now()"
"org.mozilla.javascript.NativeError.<static initializer>"
"org.mozilla.javascript.NativeError.NativeError()"
"org.mozilla.javascript.NativeError.execIdCall(IdFunctionObject, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.NativeError.findPrototypeId(String)"
"org.mozilla.javascript.NativeError.getClassName()"
"org.mozilla.javascript.NativeError.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeError.initPrototypeId(int)"
"org.mozilla.javascript.NativeError.make(Context, Scriptable, IdFunctionObject, Object[])"
"org.mozilla.javascript.NativeFunction.NativeFunction()"
"org.mozilla.javascript.NativeFunction.initScriptFunction(Context, Scriptable)"
"org.mozilla.javascript.NativeGlobal.<static initializer>"
"org.mozilla.javascript.NativeGlobal.NativeGlobal()"
"org.mozilla.javascript.NativeGlobal.execIdCall(IdFunctionObject, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.NativeGlobal.init(Context, Scriptable, boolean)"
"org.mozilla.javascript.NativeMath.<static initializer>"
"org.mozilla.javascript.NativeMath.NativeMath()"
"org.mozilla.javascript.NativeMath.execIdCall(IdFunctionObject, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.NativeMath.findPrototypeId(String)"
"org.mozilla.javascript.NativeMath.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeMath.initPrototypeId(int)"
"org.mozilla.javascript.NativeNumber.<static initializer>"
"org.mozilla.javascript.NativeNumber.NativeNumber(double)"
"org.mozilla.javascript.NativeNumber.execIdCall(IdFunctionObject, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.NativeNumber.fillConstructorProperties(IdFunctionObject)"
"org.mozilla.javascript.NativeNumber.findPrototypeId(String)"
"org.mozilla.javascript.NativeNumber.getClassName()"
"org.mozilla.javascript.NativeNumber.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeNumber.initPrototypeId(int)"
"org.mozilla.javascript.NativeObject.<static initializer>"
"org.mozilla.javascript.NativeObject.NativeObject()"
"org.mozilla.javascript.NativeObject.findPrototypeId(String)"
"org.mozilla.javascript.NativeObject.getClassName()"
"org.mozilla.javascript.NativeObject.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeObject.initPrototypeId(int)"
"org.mozilla.javascript.NativeScript.<static initializer>"
"org.mozilla.javascript.NativeScript.NativeScript(Script)"
"org.mozilla.javascript.NativeScript.findPrototypeId(String)"
"org.mozilla.javascript.NativeScript.getClassName()"
"org.mozilla.javascript.NativeScript.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeScript.initPrototypeId(int)"
"org.mozilla.javascript.NativeString.<static initializer>"
"org.mozilla.javascript.NativeString.NativeString(String)"
"org.mozilla.javascript.NativeString.execIdCall(IdFunctionObject, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.NativeString.fillConstructorProperties(IdFunctionObject)"
"org.mozilla.javascript.NativeString.findInstanceIdInfo(String)"
"org.mozilla.javascript.NativeString.findPrototypeId(String)"
"org.mozilla.javascript.NativeString.getClassName()"
"org.mozilla.javascript.NativeString.getInstanceIdValue(int)"
"org.mozilla.javascript.NativeString.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeString.initPrototypeId(int)"
"org.mozilla.javascript.NativeString.js_lastIndexOf(String, Object[])"
"org.mozilla.javascript.NativeString.realThis(Scriptable, IdFunctionObject)"
"org.mozilla.javascript.NativeWith.<static initializer>"
"org.mozilla.javascript.NativeWith.NativeWith()"
"org.mozilla.javascript.NativeWith.init(Scriptable, boolean)"
"org.mozilla.javascript.NativeWith.setParentScope(Scriptable)"
"org.mozilla.javascript.NativeWith.setPrototype(Scriptable)"
"org.mozilla.javascript.Node$Jump.Node$Jump(int)"
"org.mozilla.javascript.Node$Jump.Node$Jump(int, Node)"
"org.mozilla.javascript.Node$Jump.Node$Jump(int, Node, int)"
"org.mozilla.javascript.Node$Jump.Node$Jump(int, int)"
"org.mozilla.javascript.Node$Jump.getFinally()"
"org.mozilla.javascript.Node$Jump.getJumpStatement()"
"org.mozilla.javascript.Node$Jump.setContinue(Node)"
"org.mozilla.javascript.Node$Jump.setJumpStatement(Node$Jump)"
"org.mozilla.javascript.Node$NumberNode.Node$NumberNode(double)"
"org.mozilla.javascript.Node$PropListItem.Node$PropListItem()"
"org.mozilla.javascript.Node$PropListItem.Node$PropListItem(Node$PropListItem)"
"org.mozilla.javascript.Node$StringNode.Node$StringNode(int, String)"
"org.mozilla.javascript.Node.Node(int)"
"org.mozilla.javascript.Node.Node(int, Node)"
"org.mozilla.javascript.Node.Node(int, Node, Node)"
"org.mozilla.javascript.Node.Node(int, Node, Node, Node)"
"org.mozilla.javascript.Node.Node(int, Node, Node, Node, int)"
"org.mozilla.javascript.Node.Node(int, Node, int)"
"org.mozilla.javascript.Node.Node(int, int)"
"org.mozilla.javascript.Node.addChildAfter(Node, Node)"
"org.mozilla.javascript.Node.addChildToBack(Node)"
"org.mozilla.javascript.Node.addChildToFront(Node)"
"org.mozilla.javascript.Node.addChildrenToBack(Node)"
"org.mozilla.javascript.Node.ensureProperty(int)"
"org.mozilla.javascript.Node.getChildBefore(Node)"
"org.mozilla.javascript.Node.getDouble()"
"org.mozilla.javascript.Node.getExistingIntProp(int)"
"org.mozilla.javascript.Node.getFirstChild()"
"org.mozilla.javascript.Node.getIntProp(int, int)"
"org.mozilla.javascript.Node.getLastChild()"
"org.mozilla.javascript.Node.getLastSibling()"
"org.mozilla.javascript.Node.getLineno()"
"org.mozilla.javascript.Node.getNext()"
"org.mozilla.javascript.Node.getProp(int)"
"org.mozilla.javascript.Node.getString()"
"org.mozilla.javascript.Node.getType()"
"org.mozilla.javascript.Node.hasChildren()"
"org.mozilla.javascript.Node.labelId()"
"org.mozilla.javascript.Node.labelId(int)"
"org.mozilla.javascript.Node.lookupProperty(int)"
"org.mozilla.javascript.Node.newNumber(double)"
"org.mozilla.javascript.Node.newString(String)"
"org.mozilla.javascript.Node.newString(int, String)"
"org.mozilla.javascript.Node.newTarget()"
"org.mozilla.javascript.Node.putIntProp(int, int)"
"org.mozilla.javascript.Node.putProp(int, Object)"
"org.mozilla.javascript.Node.removeChild(Node)"
"org.mozilla.javascript.Node.replaceChild(Node, Node)"
"org.mozilla.javascript.Node.replaceChildAfter(Node, Node)"
"org.mozilla.javascript.Node.setDouble(double)"
"org.mozilla.javascript.Node.setType(int)"
"org.mozilla.javascript.NodeTransformer.NodeTransformer()"
"org.mozilla.javascript.NodeTransformer.replaceCurrent(Node, Node, Node, Node)"
"org.mozilla.javascript.NodeTransformer.transform(ScriptOrFnNode)"
"org.mozilla.javascript.NodeTransformer.transformCompilationUnit(ScriptOrFnNode)"
"org.mozilla.javascript.NodeTransformer.transformCompilationUnit_r(ScriptOrFnNode, Node)"
"org.mozilla.javascript.NodeTransformer.visitCall(Node, ScriptOrFnNode)"
"org.mozilla.javascript.NodeTransformer.visitNew(Node, ScriptOrFnNode)"
"org.mozilla.javascript.ObjArray.ObjArray()"
"org.mozilla.javascript.ObjArray.add(Object)"
"org.mozilla.javascript.ObjArray.ensureCapacity(int)"
"org.mozilla.javascript.ObjArray.get(int)"
"org.mozilla.javascript.ObjArray.getImpl(int)"
"org.mozilla.javascript.ObjArray.isEmpty()"
"org.mozilla.javascript.ObjArray.peek()"
"org.mozilla.javascript.ObjArray.pop()"
"org.mozilla.javascript.ObjArray.push(Object)"
"org.mozilla.javascript.ObjArray.setImpl(int, Object)"
"org.mozilla.javascript.ObjArray.size()"
"org.mozilla.javascript.ObjArray.toArray()"
"org.mozilla.javascript.ObjArray.toArray(Object[])"
"org.mozilla.javascript.ObjArray.toArray(Object[], int)"
"org.mozilla.javascript.ObjToIntMap$Iterator.ObjToIntMap$Iterator(ObjToIntMap)"
"org.mozilla.javascript.ObjToIntMap$Iterator.done()"
"org.mozilla.javascript.ObjToIntMap$Iterator.getKey()"
"org.mozilla.javascript.ObjToIntMap$Iterator.getValue()"
"org.mozilla.javascript.ObjToIntMap$Iterator.init(Object[], int[], int)"
"org.mozilla.javascript.ObjToIntMap$Iterator.next()"
"org.mozilla.javascript.ObjToIntMap$Iterator.start()"
"org.mozilla.javascript.ObjToIntMap.<static initializer>"
"org.mozilla.javascript.ObjToIntMap.ObjToIntMap(int)"
"org.mozilla.javascript.ObjToIntMap.access$0()"
"org.mozilla.javascript.ObjToIntMap.ensureIndex(Object)"
"org.mozilla.javascript.ObjToIntMap.findIndex(Object)"
"org.mozilla.javascript.ObjToIntMap.get(Object, int)"
"org.mozilla.javascript.ObjToIntMap.has(Object)"
"org.mozilla.javascript.ObjToIntMap.initIterator(ObjToIntMap$Iterator)"
"org.mozilla.javascript.ObjToIntMap.insertNewKey(Object, int)"
"org.mozilla.javascript.ObjToIntMap.intern(Object)"
"org.mozilla.javascript.ObjToIntMap.newIterator()"
"org.mozilla.javascript.ObjToIntMap.put(Object, int)"
"org.mozilla.javascript.ObjToIntMap.rehashTable()"
"org.mozilla.javascript.ObjToIntMap.size()"
"org.mozilla.javascript.ObjToIntMap.tableLookupStep(int, int, int)"
"org.mozilla.javascript.Parser.Parser(CompilerEnvirons, ErrorReporter)"
"org.mozilla.javascript.Parser.addExpr()"
"org.mozilla.javascript.Parser.andExpr(boolean)"
"org.mozilla.javascript.Parser.argumentList(Node)"
"org.mozilla.javascript.Parser.assignExpr(boolean)"
"org.mozilla.javascript.Parser.bitAndExpr(boolean)"
"org.mozilla.javascript.Parser.bitOrExpr(boolean)"
"org.mozilla.javascript.Parser.bitXorExpr(boolean)"
"org.mozilla.javascript.Parser.condExpr(boolean)"
"org.mozilla.javascript.Parser.condition()"
"org.mozilla.javascript.Parser.consumeToken()"
"org.mozilla.javascript.Parser.createDecompiler(CompilerEnvirons)"
"org.mozilla.javascript.Parser.enterLoop(Node)"
"org.mozilla.javascript.Parser.eqExpr(boolean)"
"org.mozilla.javascript.Parser.exitLoop()"
"org.mozilla.javascript.Parser.expr(boolean)"
"org.mozilla.javascript.Parser.function(int)"
"org.mozilla.javascript.Parser.getEncodedSource()"
"org.mozilla.javascript.Parser.insideFunction()"
"org.mozilla.javascript.Parser.matchJumpLabelName()"
"org.mozilla.javascript.Parser.matchToken(int)"
"org.mozilla.javascript.Parser.memberExpr(boolean)"
"org.mozilla.javascript.Parser.memberExprTail(boolean, Node)"
"org.mozilla.javascript.Parser.mulExpr()"
"org.mozilla.javascript.Parser.mustMatchToken(int, String)"
"org.mozilla.javascript.Parser.nextFlaggedToken()"
"org.mozilla.javascript.Parser.nextToken()"
"org.mozilla.javascript.Parser.orExpr(boolean)"
"org.mozilla.javascript.Parser.parse()"
"org.mozilla.javascript.Parser.parse(String, String, int)"
"org.mozilla.javascript.Parser.parseFunctionBody()"
"org.mozilla.javascript.Parser.peekFlaggedToken()"
"org.mozilla.javascript.Parser.peekToken()"
"org.mozilla.javascript.Parser.peekTokenOrEOL()"
"org.mozilla.javascript.Parser.primaryExpr()"
"org.mozilla.javascript.Parser.propertyName(Node, String, int)"
"org.mozilla.javascript.Parser.relExpr(boolean)"
"org.mozilla.javascript.Parser.setCheckForLabel()"
"org.mozilla.javascript.Parser.shiftExpr()"
"org.mozilla.javascript.Parser.statement()"
"org.mozilla.javascript.Parser.statementHelper(Node)"
"org.mozilla.javascript.Parser.statements()"
"org.mozilla.javascript.Parser.unaryExpr()"
"org.mozilla.javascript.Parser.variables(boolean)"
"org.mozilla.javascript.ScriptOrFnNode.ScriptOrFnNode(int)"
"org.mozilla.javascript.ScriptOrFnNode.addFunction(FunctionNode)"
"org.mozilla.javascript.ScriptOrFnNode.addParam(String)"
"org.mozilla.javascript.ScriptOrFnNode.addRegexp(String, String)"
"org.mozilla.javascript.ScriptOrFnNode.addVar(String)"
"org.mozilla.javascript.ScriptOrFnNode.getEncodedSourceEnd()"
"org.mozilla.javascript.ScriptOrFnNode.getEncodedSourceStart()"
"org.mozilla.javascript.ScriptOrFnNode.getFunctionCount()"
"org.mozilla.javascript.ScriptOrFnNode.getFunctionNode(int)"
"org.mozilla.javascript.ScriptOrFnNode.getParamAndVarCount()"
"org.mozilla.javascript.ScriptOrFnNode.getParamAndVarNames()"
"org.mozilla.javascript.ScriptOrFnNode.getParamCount()"
"org.mozilla.javascript.ScriptOrFnNode.getParamOrVarIndex(String)"
"org.mozilla.javascript.ScriptOrFnNode.getRegexpCount()"
"org.mozilla.javascript.ScriptOrFnNode.getRegexpFlags(int)"
"org.mozilla.javascript.ScriptOrFnNode.getRegexpString(int)"
"org.mozilla.javascript.ScriptOrFnNode.getSourceName()"
"org.mozilla.javascript.ScriptOrFnNode.hasParamOrVar(String)"
"org.mozilla.javascript.ScriptOrFnNode.setBaseLineno(int)"
"org.mozilla.javascript.ScriptOrFnNode.setEncodedSourceBounds(int, int)"
"org.mozilla.javascript.ScriptOrFnNode.setEndLineno(int)"
"org.mozilla.javascript.ScriptOrFnNode.setSourceName(String)"
"org.mozilla.javascript.ScriptRuntime.<static initializer>"
"org.mozilla.javascript.ScriptRuntime.add(Object, Object, Context)"
"org.mozilla.javascript.ScriptRuntime.bind(Context, Scriptable, String)"
"org.mozilla.javascript.ScriptRuntime.checkRegExpProxy(Context)"
"org.mozilla.javascript.ScriptRuntime.cmp_LE(Object, Object)"
"org.mozilla.javascript.ScriptRuntime.cmp_LT(Object, Object)"
"org.mozilla.javascript.ScriptRuntime.createFunctionActivation(NativeFunction, Scriptable, Object[])"
"org.mozilla.javascript.ScriptRuntime.doScriptableIncrDecr(Scriptable, String, Scriptable, Object, int)"
"org.mozilla.javascript.ScriptRuntime.doTopCall(Callable, Context, Scriptable, Scriptable, Object[])"
"org.mozilla.javascript.ScriptRuntime.enterActivationFunction(Context, Scriptable)"
"org.mozilla.javascript.ScriptRuntime.eq(Object, Object)"
"org.mozilla.javascript.ScriptRuntime.eqNumber(double, Object)"
"org.mozilla.javascript.ScriptRuntime.eqString(String, Object)"
"org.mozilla.javascript.ScriptRuntime.exitActivationFunction(Context)"
"org.mozilla.javascript.ScriptRuntime.getExistingCtor(Context, Scriptable, String)"
"org.mozilla.javascript.ScriptRuntime.getIndexObject(String)"
"org.mozilla.javascript.ScriptRuntime.getNameFunctionAndThis(String, Context, Scriptable)"
"org.mozilla.javascript.ScriptRuntime.getObjectElem(Object, Object, Context)"
"org.mozilla.javascript.ScriptRuntime.getObjectElem(Scriptable, Object, Context)"
"org.mozilla.javascript.ScriptRuntime.getObjectProp(Object, String, Context)"
"org.mozilla.javascript.ScriptRuntime.getObjectProp(Scriptable, String, Context)"
"org.mozilla.javascript.ScriptRuntime.getPropFunctionAndThis(Object, String, Context)"
"org.mozilla.javascript.ScriptRuntime.getRegExpProxy(Context)"
"org.mozilla.javascript.ScriptRuntime.getTopCallScope(Context)"
"org.mozilla.javascript.ScriptRuntime.getTopLevelProp(Scriptable, String)"
"org.mozilla.javascript.ScriptRuntime.getValueFunctionAndThis(Object, Context)"
"org.mozilla.javascript.ScriptRuntime.hasTopCall(Context)"
"org.mozilla.javascript.ScriptRuntime.indexFromString(String)"
"org.mozilla.javascript.ScriptRuntime.initFunction(Context, Scriptable, NativeFunction, int, boolean)"
"org.mozilla.javascript.ScriptRuntime.initScript(NativeFunction, Scriptable, Context, Scriptable, boolean)"
"org.mozilla.javascript.ScriptRuntime.initStandardObjects(Context, ScriptableObject, boolean)"
"org.mozilla.javascript.ScriptRuntime.isSpecialProperty(String)"
"org.mozilla.javascript.ScriptRuntime.lastIndexResult(Context)"
"org.mozilla.javascript.ScriptRuntime.lastStoredScriptable(Context)"
"org.mozilla.javascript.ScriptRuntime.name(Context, Scriptable, String)"
"org.mozilla.javascript.ScriptRuntime.nameIncrDecr(Scriptable, String, int)"
"org.mozilla.javascript.ScriptRuntime.nameOrFunction(Context, Scriptable, Scriptable, String, boolean)"
"org.mozilla.javascript.ScriptRuntime.newObject(Context, Scriptable, String, Object[])"
"org.mozilla.javascript.ScriptRuntime.numberToString(double, int)"
"org.mozilla.javascript.ScriptRuntime.setFunctionProtoAndParent(BaseFunction, Scriptable)"
"org.mozilla.javascript.ScriptRuntime.setName(Scriptable, Object, Context, Scriptable, String)"
"org.mozilla.javascript.ScriptRuntime.setObjectElem(Object, Object, Object, Context)"
"org.mozilla.javascript.ScriptRuntime.setObjectElem(Scriptable, Object, Object, Context)"
"org.mozilla.javascript.ScriptRuntime.setObjectProp(Object, String, Object, Context)"
"org.mozilla.javascript.ScriptRuntime.setObjectProp(Scriptable, String, Object, Context)"
"org.mozilla.javascript.ScriptRuntime.setObjectProtoAndParent(ScriptableObject, Scriptable)"
"org.mozilla.javascript.ScriptRuntime.storeIndexResult(Context, int)"
"org.mozilla.javascript.ScriptRuntime.storeScriptable(Context, Scriptable)"
"org.mozilla.javascript.ScriptRuntime.stringToNumber(String, int, int)"
"org.mozilla.javascript.ScriptRuntime.toBoolean(Object)"
"org.mozilla.javascript.ScriptRuntime.toInteger(Object)"
"org.mozilla.javascript.ScriptRuntime.toInteger(Object[], int)"
"org.mozilla.javascript.ScriptRuntime.toInteger(double)"
"org.mozilla.javascript.ScriptRuntime.toNumber(Object)"
"org.mozilla.javascript.ScriptRuntime.toNumber(Object[], int)"
"org.mozilla.javascript.ScriptRuntime.toNumber(String)"
"org.mozilla.javascript.ScriptRuntime.toObject(Context, Scriptable, Object)"
"org.mozilla.javascript.ScriptRuntime.toObjectOrNull(Context, Object)"
"org.mozilla.javascript.ScriptRuntime.toString(Object)"
"org.mozilla.javascript.ScriptRuntime.toString(Object[], int)"
"org.mozilla.javascript.ScriptRuntime.toString(double)"
"org.mozilla.javascript.ScriptRuntime.toStringIdOrIndex(Context, Object)"
"org.mozilla.javascript.ScriptRuntime.toUint16(Object)"
"org.mozilla.javascript.ScriptRuntime.topScopeName(Context, Scriptable, String)"
"org.mozilla.javascript.ScriptRuntime.typeof(Object)"
"org.mozilla.javascript.ScriptRuntime.typeofName(Scriptable, String)"
"org.mozilla.javascript.ScriptRuntime.wrapBoolean(boolean)"
"org.mozilla.javascript.ScriptRuntime.wrapInt(int)"
"org.mozilla.javascript.ScriptRuntime.wrapNumber(double)"
"org.mozilla.javascript.ScriptableObject$GetterSlot.ScriptableObject$GetterSlot()"
"org.mozilla.javascript.ScriptableObject$GetterSlot.ScriptableObject$GetterSlot(ScriptableObject$GetterSlot)"
"org.mozilla.javascript.ScriptableObject$Slot.ScriptableObject$Slot()"
"org.mozilla.javascript.ScriptableObject$Slot.ScriptableObject$Slot(ScriptableObject$Slot)"
"org.mozilla.javascript.ScriptableObject$Slot.ScriptableObject$Slot(ScriptableObject$Slot, ScriptableObject$Slot)"
"org.mozilla.javascript.ScriptableObject.<static initializer>"
"org.mozilla.javascript.ScriptableObject.ScriptableObject()"
"org.mozilla.javascript.ScriptableObject.ScriptableObject(Scriptable, Scriptable)"
"org.mozilla.javascript.ScriptableObject.addSlot(String, int, ScriptableObject$Slot)"
"org.mozilla.javascript.ScriptableObject.addSlotImpl(String, int, ScriptableObject$Slot)"
"org.mozilla.javascript.ScriptableObject.associateValue(Object, Object)"
"org.mozilla.javascript.ScriptableObject.checkValidAttributes(int)"
"org.mozilla.javascript.ScriptableObject.defineClass(Scriptable, Class)"
"org.mozilla.javascript.ScriptableObject.defineClass(Scriptable, Class, boolean)"
"org.mozilla.javascript.ScriptableObject.defineClass(Scriptable, Class, boolean, boolean)"
"org.mozilla.javascript.ScriptableObject.defineFunctionProperties(String[], Class, int)"
"org.mozilla.javascript.ScriptableObject.defineProperty(Scriptable, String, Object, int)"
"org.mozilla.javascript.ScriptableObject.defineProperty(String, Object, Method, Method, int)"
"org.mozilla.javascript.ScriptableObject.defineProperty(String, Object, int)"
"org.mozilla.javascript.ScriptableObject.get(String, Scriptable)"
"org.mozilla.javascript.ScriptableObject.get(int, Scriptable)"
"org.mozilla.javascript.ScriptableObject.getBase(Scriptable, String)"
"org.mozilla.javascript.ScriptableObject.getBase(Scriptable, int)"
"org.mozilla.javascript.ScriptableObject.getByGetter(ScriptableObject$GetterSlot, Scriptable)"
"org.mozilla.javascript.ScriptableObject.getClassPrototype(Scriptable, String)"
"org.mozilla.javascript.ScriptableObject.getDefaultValue(Class)"
"org.mozilla.javascript.ScriptableObject.getFunctionPrototype(Scriptable)"
"org.mozilla.javascript.ScriptableObject.getNamedSlot(String)"
"org.mozilla.javascript.ScriptableObject.getObjectPrototype(Scriptable)"
"org.mozilla.javascript.ScriptableObject.getParentScope()"
"org.mozilla.javascript.ScriptableObject.getProperty(Scriptable, String)"
"org.mozilla.javascript.ScriptableObject.getProperty(Scriptable, int)"
"org.mozilla.javascript.ScriptableObject.getPrototype()"
"org.mozilla.javascript.ScriptableObject.getSlot(String, int)"
"org.mozilla.javascript.ScriptableObject.getSlotPosition(ScriptableObject$Slot[], String, int)"
"org.mozilla.javascript.ScriptableObject.getTopLevelScope(Scriptable)"
"org.mozilla.javascript.ScriptableObject.grow()"
"org.mozilla.javascript.ScriptableObject.has(String, Scriptable)"
"org.mozilla.javascript.ScriptableObject.has(int, Scriptable)"
"org.mozilla.javascript.ScriptableObject.hasProperty(Scriptable, String)"
"org.mozilla.javascript.ScriptableObject.isSealed()"
"org.mozilla.javascript.ScriptableObject.put(String, Scriptable, Object)"
"org.mozilla.javascript.ScriptableObject.put(int, Scriptable, Object)"
"org.mozilla.javascript.ScriptableObject.putProperty(Scriptable, String, Object)"
"org.mozilla.javascript.ScriptableObject.putProperty(Scriptable, int, Object)"
"org.mozilla.javascript.ScriptableObject.setAttributes(String, int)"
"org.mozilla.javascript.ScriptableObject.setBySetter(ScriptableObject$GetterSlot, Scriptable, Object)"
"org.mozilla.javascript.ScriptableObject.setParentScope(Scriptable)"
"org.mozilla.javascript.ScriptableObject.setPrototype(Scriptable)"
"org.mozilla.javascript.SecurityController.global()"
"org.mozilla.javascript.TokenStream.TokenStream(Parser, Reader, String, int)"
"org.mozilla.javascript.TokenStream.addToString(int)"
"org.mozilla.javascript.TokenStream.getChar()"
"org.mozilla.javascript.TokenStream.getLineno()"
"org.mozilla.javascript.TokenStream.getNumber()"
"org.mozilla.javascript.TokenStream.getString()"
"org.mozilla.javascript.TokenStream.getStringFromBuffer()"
"org.mozilla.javascript.TokenStream.getToken()"
"org.mozilla.javascript.TokenStream.isAlpha(int)"
"org.mozilla.javascript.TokenStream.isDigit(int)"
"org.mozilla.javascript.TokenStream.isJSSpace(int)"
"org.mozilla.javascript.TokenStream.matchChar(int)"
"org.mozilla.javascript.TokenStream.peekChar()"
"org.mozilla.javascript.TokenStream.readRegExp(int)"
"org.mozilla.javascript.TokenStream.skipLine()"
"org.mozilla.javascript.TokenStream.stringToKeyword(String)"
"org.mozilla.javascript.TokenStream.ungetChar(int)"
"org.mozilla.javascript.Undefined.<static initializer>"
"org.mozilla.javascript.Undefined.Undefined()"
"org.mozilla.javascript.UniqueTag.<static initializer>"
"org.mozilla.javascript.UniqueTag.UniqueTag(int)"
"org.mozilla.javascript.VMBridge.<static initializer>"
"org.mozilla.javascript.VMBridge.VMBridge()"
"org.mozilla.javascript.VMBridge.makeInstance()"
"org.mozilla.javascript.continuations.Continuation.<static initializer>"
"org.mozilla.javascript.continuations.Continuation.Continuation()"
"org.mozilla.javascript.continuations.Continuation.findPrototypeId(String)"
"org.mozilla.javascript.continuations.Continuation.getClassName()"
"org.mozilla.javascript.continuations.Continuation.init(Scriptable, boolean)"
"org.mozilla.javascript.continuations.Continuation.initPrototypeId(int)"
"org.mozilla.javascript.continuations.Continuation.isContinuationConstructor(IdFunctionObject)"
"org.mozilla.javascript.jdk13.VMBridge_jdk13.VMBridge_jdk13()"
"org.mozilla.javascript.jdk13.VMBridge_jdk13.getContext(Object)"
"org.mozilla.javascript.jdk13.VMBridge_jdk13.getThreadContextHelper()"
"org.mozilla.javascript.jdk13.VMBridge_jdk13.setContext(Object, Context)"
"org.mozilla.javascript.regexp.CompilerState.CompilerState(char[], int, int)"
"org.mozilla.javascript.regexp.NativeRegExp.<static initializer>"
"org.mozilla.javascript.regexp.NativeRegExp.NativeRegExp()"
"org.mozilla.javascript.regexp.NativeRegExp.NativeRegExp(Scriptable, Object)"
"org.mozilla.javascript.regexp.NativeRegExp.addIndex(byte[], int, int)"
"org.mozilla.javascript.regexp.NativeRegExp.calculateBitmapSize(CompilerState, RENode, char[], int, int)"
"org.mozilla.javascript.regexp.NativeRegExp.compileRE(String, String, boolean)"
"org.mozilla.javascript.regexp.NativeRegExp.emitREBytecode(CompilerState, RECompiled, int, RENode)"
"org.mozilla.javascript.regexp.NativeRegExp.findInstanceIdInfo(String)"
"org.mozilla.javascript.regexp.NativeRegExp.findPrototypeId(String)"
"org.mozilla.javascript.regexp.NativeRegExp.getClassName()"
"org.mozilla.javascript.regexp.NativeRegExp.getIndex(byte[], int)"
"org.mozilla.javascript.regexp.NativeRegExp.init(Context, Scriptable, boolean)"
"org.mozilla.javascript.regexp.NativeRegExp.parseAlternative(CompilerState)"
"org.mozilla.javascript.regexp.NativeRegExp.parseDisjunction(CompilerState)"
"org.mozilla.javascript.regexp.NativeRegExp.parseTerm(CompilerState)"
"org.mozilla.javascript.regexp.NativeRegExp.resolveForwardJump(byte[], int, int)"
"org.mozilla.javascript.regexp.NativeRegExpCtor.NativeRegExpCtor()"
"org.mozilla.javascript.regexp.RECharSet.RECharSet(int, int, int)"
"org.mozilla.javascript.regexp.RECompiled.RECompiled()"
"org.mozilla.javascript.regexp.RENode.RENode(byte)"
"org.mozilla.javascript.regexp.RegExpImpl.RegExpImpl()"
"org.mozilla.javascript.regexp.RegExpImpl.compileRegExp(Context, String, String)"
"org.mozilla.javascript.regexp.RegExpImpl.wrapRegExp(Context, Scriptable, Object)"
"org.mozilla.javascript.tools.ToolErrorReporter.ToolErrorReporter(boolean, PrintStream)"
"org.mozilla.javascript.tools.shell.Environment.Environment()"
"org.mozilla.javascript.tools.shell.Environment.Environment(ScriptableObject)"
"org.mozilla.javascript.tools.shell.Environment.defineClass(ScriptableObject)"
"org.mozilla.javascript.tools.shell.Environment.getClassName()"
"org.mozilla.javascript.tools.shell.Environment.put(String, Scriptable, Object)"
"org.mozilla.javascript.tools.shell.Global$1.Global$1(Global)"
"org.mozilla.javascript.tools.shell.Global$1.run(Context)"
"org.mozilla.javascript.tools.shell.Global.Global()"
"org.mozilla.javascript.tools.shell.Global.getErr()"
"org.mozilla.javascript.tools.shell.Global.getInstance(Function)"
"org.mozilla.javascript.tools.shell.Global.getOut()"
"org.mozilla.javascript.tools.shell.Global.init(Context)"
"org.mozilla.javascript.tools.shell.Global.init(ContextFactory)"
"org.mozilla.javascript.tools.shell.Global.initQuitAction(QuitAction)"
"org.mozilla.javascript.tools.shell.Global.print(Context, Scriptable, Object[], Function)"
"org.mozilla.javascript.tools.shell.Global.version(Context, Scriptable, Object[], Function)"
"org.mozilla.javascript.tools.shell.Main$IProxy.Main$IProxy(int)"
"org.mozilla.javascript.tools.shell.Main$IProxy.run(Context)"
"org.mozilla.javascript.tools.shell.Main.<static initializer>"
"org.mozilla.javascript.tools.shell.Main.evaluateScript(Script, Context, Scriptable)"
"org.mozilla.javascript.tools.shell.Main.exec(String[])"
"org.mozilla.javascript.tools.shell.Main.loadScriptFromSource(Context, String, String, int, Object)"
"org.mozilla.javascript.tools.shell.Main.main(String[])"
"org.mozilla.javascript.tools.shell.Main.processFile(Context, Scriptable, String)"
"org.mozilla.javascript.tools.shell.Main.processFileSecure(Context, Scriptable, String, Object)"
"org.mozilla.javascript.tools.shell.Main.processFiles(Context, String[])"
"org.mozilla.javascript.tools.shell.Main.processOptions(String[])"
"org.mozilla.javascript.tools.shell.Main.processSource(Context, String)"
"org.mozilla.javascript.tools.shell.Main.readFileOrUrl(String, boolean)"
"org.mozilla.javascript.tools.shell.ShellContextFactory.ShellContextFactory()"
"org.mozilla.javascript.tools.shell.ShellContextFactory.hasFeature(Context, int)"
"org.mozilla.javascript.tools.shell.ShellContextFactory.onContextCreated(Context)"
"org.mozilla.javascript.tools.shell.ShellContextFactory.setErrorReporter(ErrorReporter)"
"org.mozilla.javascript.tools.shell.ShellContextFactory.setOptimizationLevel(int)"
