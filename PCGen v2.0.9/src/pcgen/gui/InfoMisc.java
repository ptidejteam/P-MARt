/*
 * InfoMisc.java
 * Copyright (c) 2001 Thomas G. W. Epperly <tomepperly@home.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 * Created on April 22, 2001, 8:54 PM
 */

package pcgen.gui;

import pcgen.core.Globals;
import pcgen.core.PlayerCharacter;
/**
 * This displays three text areas for the user to provide information about
 * their companions, magic items and valuables (money, gems, and valuable
 * stuff).
 *
 * @author  Tom Epperly
 * @version $Revision: 1.1 $
 */
public class InfoMisc extends javax.swing.JPanel
{
  
  /** Creates new form InfoMisc */
  public InfoMisc()
  {
    initComponents();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
  private void initComponents()//GEN-BEGIN:initComponents
  {
    d_moneyLabel = new javax.swing.JLabel();
    d_magicItems = new javax.swing.JLabel();
    d_magicArea = new javax.swing.JScrollPane();
    d_magicText = new javax.swing.JEditorPane();
    d_moneyArea = new javax.swing.JScrollPane();
    d_moneyText = new javax.swing.JEditorPane();

    setLayout(new java.awt.GridBagLayout());
    java.awt.GridBagConstraints gridBagConstraints1;

    addComponentListener(new java.awt.event.ComponentAdapter()
    {
      public void componentShown(java.awt.event.ComponentEvent evt)
      {
        getDataFromCore(evt);
      }
      public void componentHidden(java.awt.event.ComponentEvent evt)
      {
        sendDataToCore(evt);
      }
    });

    d_moneyLabel.setText("Other Assets");
    gridBagConstraints1 = new java.awt.GridBagConstraints();
    gridBagConstraints1.gridx = 0;
    gridBagConstraints1.gridy = 2;
    gridBagConstraints1.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints1.weightx = 1.0;
    add(d_moneyLabel, gridBagConstraints1);

    d_magicItems.setText("Magic Items");
    gridBagConstraints1 = new java.awt.GridBagConstraints();
    gridBagConstraints1.gridx = 0;
    gridBagConstraints1.gridy = 0;
    gridBagConstraints1.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints1.weightx = 1.0;
    add(d_magicItems, gridBagConstraints1);

    d_magicArea.setMinimumSize(new java.awt.Dimension(100, 64));
    d_magicText.setMinimumSize(new java.awt.Dimension(200, 64));
    d_magicText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        updateCoreMagic(evt);
      }
    });

    d_magicArea.setViewportView(d_magicText);

    gridBagConstraints1 = new java.awt.GridBagConstraints();
    gridBagConstraints1.gridx = 0;
    gridBagConstraints1.gridy = 1;
    gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints1.weightx = 100.0;
    gridBagConstraints1.weighty = 1.0;
    add(d_magicArea, gridBagConstraints1);

    d_moneyArea.setMinimumSize(new java.awt.Dimension(100, 64));
    d_moneyText.setMinimumSize(new java.awt.Dimension(200, 64));
    d_moneyText.addFocusListener(new java.awt.event.FocusAdapter()
    {
      public void focusLost(java.awt.event.FocusEvent evt)
      {
        updateCoreMoney(evt);
      }
    });

    d_moneyArea.setViewportView(d_moneyText);

    gridBagConstraints1 = new java.awt.GridBagConstraints();
    gridBagConstraints1.gridx = 0;
    gridBagConstraints1.gridy = 3;
    gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints1.weightx = 100.0;
    gridBagConstraints1.weighty = 1.0;
    add(d_moneyArea, gridBagConstraints1);

  }//GEN-END:initComponents

  private void sendDataToCore(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_sendDataToCore
  {//GEN-HEADEREND:event_sendDataToCore
    PlayerCharacter pc = Globals.currentPC;
    if (pc != null && d_shown)
    {
      String origText = (String)pc.miscList().get(0);
      String newText = d_moneyText.getText();
      if (!newText.equals(origText)) {
        pc.miscList().set(0, newText);
        pc.setDirty(true);
      }
      origText = (String)pc.miscList().get(2);
      newText = d_magicText.getText();
      if (!newText.equals(origText)) {
        pc.miscList().set(2, newText);
        pc.setDirty(true);
      }
    }
  }//GEN-LAST:event_sendDataToCore

  private void updateCoreMoney(java.awt.event.FocusEvent evt)//GEN-FIRST:event_updateCoreMoney
  {//GEN-HEADEREND:event_updateCoreMoney
    PlayerCharacter pc = Globals.currentPC;
    if (pc != null)
    {
      String origText = (String)pc.miscList().get(0);
      String newText = d_moneyText.getText();
      if (!newText.equals(origText)) {
        pc.miscList().set(0, d_moneyText.getText());
        pc.setDirty(true);
      }
    }
  }//GEN-LAST:event_updateCoreMoney

  private void updateCoreMagic(java.awt.event.FocusEvent evt)//GEN-FIRST:event_updateCoreMagic
  {//GEN-HEADEREND:event_updateCoreMagic
    PlayerCharacter pc = Globals.currentPC;
    if (pc != null)
    {
      String origText = (String)pc.miscList().get(2);
      String newText = d_magicText.getText();
      if(!newText.equals(origText))
      {
        pc.miscList().set(2, newText);
        pc.setDirty(true);
      }
    }
  }//GEN-LAST:event_updateCoreMagic
  
  private void getDataFromCore(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_getDataFromCore
  {//GEN-HEADEREND:event_getDataFromCore
    requestDefaultFocus();
    PlayerCharacter pc = Globals.currentPC;
    if (pc != null)
    {
      String currentMoney = (String)pc.miscList().get(0);
      String currentMagic = (String)pc.miscList().get(2);
      if (!d_moneyText.getText().equals(currentMoney))
        d_moneyText.setText(currentMoney);
      if (!d_magicText.getText().equals(currentMagic))
        d_magicText.setText(currentMagic);
    }
    else
    {
      d_magicText.setText("");
      d_moneyText.setText("");
    }
    d_shown = true;
  }//GEN-LAST:event_getDataFromCore

  private boolean d_shown = false;
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel d_moneyLabel;
  private javax.swing.JLabel d_magicItems;
  private javax.swing.JScrollPane d_magicArea;
  private javax.swing.JEditorPane d_magicText;
  private javax.swing.JScrollPane d_moneyArea;
  private javax.swing.JEditorPane d_moneyText;
  // End of variables declaration//GEN-END:variables
  
}
