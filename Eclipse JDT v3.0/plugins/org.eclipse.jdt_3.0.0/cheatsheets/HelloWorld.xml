<?xml version="1.0" encoding="UTF-8" ?> 
<cheatsheet title="Simple Java Application">

	<intro 
		href="/org.eclipse.platform.doc.user/reference/ref-cheatsheets.htm">
		<description>
			Welcome to the Hello, World Java tutorial.
			It will help you build the famous "hello world" application
			and try it out. You will create a Java project, and a Java
			class that will print "hello world" in the console when run.
			Let's get started!
		</description>
	</intro>

	<item
		href="/org.eclipse.platform.doc.user/concepts/concepts-4.htm"
		title="Open the Java Perspective">
		<action
			pluginId="org.eclipse.ui.cheatsheets"
			class="org.eclipse.ui.internal.cheatsheets.actions.OpenPerspective"
			param1="org.eclipse.jdt.ui.JavaPerspective"/>
		<description>
			Select Window-&gt;Open Perspective-&gt;Java in the menubar at
			the top of the workbench. This step changes the perspective to
			set up the Eclipse workbench for Java development. You can
			click the "Click to Perform" button to have the "Java"
			perspective opened automatically.
		</description>
	</item>

	<item
		href="/org.eclipse.jdt.doc.user/tasks/tasks-12.htm"
		title="Create a Java project"
		skip="true">
		<action
			pluginId="org.eclipse.jdt.ui"
			class="org.eclipse.jdt.internal.ui.wizards.OpenProjectWizardAction"/>
		<description>
			The first thing you will need is a Java Project. If you
			already have a Java project in your workspace that you
			would like to use, you may skip this step by clicking the
			"Click to Skip" button. If not, select File-&gt;New-&gt;Project...
			and choose Java Project in the list. Complete the subsequent
			pages as required. The "New Java Project" wizard is automatically
			displayed when you click the "Click to Perform" button.
		</description>
	</item>

	<item
		href="/org.eclipse.jdt.doc.user/gettingStarted/qs-9.htm" 
		title="Create your HelloWorld class"
		skip="true">
		<action
			pluginId="org.eclipse.jdt.ui"
			class="org.eclipse.jdt.internal.ui.wizards.OpenClassWizardAction"/>
		<description>
			You should now have a Java Project in your workspace. The
			next step in building your hello world application is to
			create your HelloWorld class. You may do this by either
			clicking the "Click to Perform" button below to launch the
			New Java Class wizard, or you may use the Eclipse tools to
			do it, by using the File-&gt;New-&gt;Class action. When you
			use the wizard, make sure that you specify that you would
			like to have a "main" method added. Name your class "HelloWorld".
			If you do not use the "Click to Perform" button below, click the
			"Click to Skip" button to advance to the next step in building
			your hello world application.
		</description>
	</item>

	<item
		href="/org.eclipse.jdt.doc.user/tasks/tasks-54.htm"
		title="Add a System.out.println line in your main method">
		<description>
			Now that you have your HelloWorld class, in the
			"public static void main" method, add the following statement:
			 System.out.println("Hello world!"); and save your changes.
			 Click the "Click to Complete" button below when finished.
		</description>
	</item>

	<item
		href="/org.eclipse.jdt.doc.user/gettingStarted/qs-12.htm"
		title="Test your Java Application">
		<description>
			The final moment has arrived!  You are ready to test your
			HelloWorld class. Select your class in the package explorer
			(the Java tree view on the left of the workbench window in
			the Java Perspective.). When your HelloWorld class is selected,
			select Run-&gt;Run As-&gt;Java Application.  Hello world!
			should be printed in your "Console" view. Congratulations! You
			have built your hello world application and it worked!
		</description>
	</item>

</cheatsheet>