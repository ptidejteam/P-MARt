package org.apache.lucene.search.regex;

import org.apache.lucene.search.MultiTermQuery;
import org.apache.lucene.search.FilteredTermEnum;
import org.apache.lucene.index.Term;
import org.apache.lucene.index.IndexReader;

import java.io.IOException;

public class RegexQuery extends MultiTermQuery implements RegexQueryCapable {
  private RegexCapabilities regexImpl = new JavaUtilRegexCapabilities();

  public RegexQuery(Term term) {
    super(term);
  }

  public void setRegexImplementation(RegexCapabilities impl) {
    this.regexImpl = impl;
  }

  public RegexCapabilities getRegexImplementation() {
    return regexImpl;
  }

  protected FilteredTermEnum getEnum(IndexReader reader) throws IOException {
    Term term = new Term(getTerm().field(), getTerm().text());
    return new RegexTermEnum(reader, term, regexImpl);
  }

  /* generated by IntelliJ IDEA */
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    if (!super.equals(o)) return false;

    final RegexQuery that = (RegexQuery) o;

    return regexImpl.equals(that.regexImpl);
  }

  /* generated by IntelliJ IDEA */
  public int hashCode() {
    int result = super.hashCode();
    result = 29 * result + regexImpl.hashCode();
    return result;
  }
}
