/*
 *  Initiative - A role playing utility to track turns
 *  Copyright (C) 2002 Devon D Jones
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 *  The author of this program grants you the ability to use this code
 *  in conjunction with code that is covered under the Open Gaming License
 *
 *  PreferencesDamage.java
 *
 *  Created on July 10, 2003, 5:03 PM
 */

package plugin.initiative.gui;

import pcgen.core.SettingsHandler;
import plugin.initiative.InitiativePlugin;

/**
 *
 * @author  soulcatcher
 */
public class PreferencesMassiveDamagePanel extends gmgen.gui.PreferencesPanel {

	public static int MASSIVE_OFF = 1;
	public static int MASSIVE_DND = 2;
	public static int MASSIVE_D20_MODERN = 3;
	public static int MASSIVE_HOUSE_HALF = 4;

	public static int MASSIVE_EFFECT_KILL = 1;
	public static int MASSIVE_EFFECT_NEGATIVE = 2;
	public static int MASSIVE_EFFECT_HALF_TOTAL = 3;
	public static int MASSIVE_EFFECT_HALF_CURRENT = 4;

	/** Creates new form PreferencesDamage */
	public PreferencesMassiveDamagePanel() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents() {//GEN-BEGIN:initComponents
        massiveDamageGroup = new javax.swing.ButtonGroup();
        effectGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        massive1 = new javax.swing.JRadioButton();
        massive2 = new javax.swing.JRadioButton();
        massive3 = new javax.swing.JRadioButton();
        massive4 = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        effect1 = new javax.swing.JRadioButton();
        effect2 = new javax.swing.JRadioButton();
        effect3 = new javax.swing.JRadioButton();
        effect4 = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        sizeCheck = new javax.swing.JCheckBox();
        sizeLabel1 = new javax.swing.JLabel();
        sizeLabel2 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabel1.setText("Massive Damage");
        jPanel1.add(jLabel1);

        jLabel2.setText(" ");
        jPanel1.add(jLabel2);

        jPanel1.add(jSeparator1);

        jPanel5.add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.Y_AXIS));

        jPanel6.setBorder(new javax.swing.border.TitledBorder(null, "Massive Damage", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        massive1.setSelected(true);
        massive1.setText("Don't Track Massive Damage");
        massiveDamageGroup.add(massive1);
        massive1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                massiveActionPerformed(evt);
            }
        });

        jPanel6.add(massive1);

        massive2.setText("Roll Fort for more then 50 damage (3rd Ed)");
        massiveDamageGroup.add(massive2);
        massive2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                massiveActionPerformed(evt);
            }
        });

        jPanel6.add(massive2);

        massive3.setText("Roll Fort for CON Damage (Modern)");
        massiveDamageGroup.add(massive3);
        massive3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                massiveActionPerformed(evt);
            }
        });

        jPanel6.add(massive3);

        massive4.setText("Roll Fort for more then half of total hit points (House)");
        massiveDamageGroup.add(massive4);
        massive4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                massiveActionPerformed(evt);
            }
        });

        jPanel6.add(massive4);

        jPanel3.add(jPanel6);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.Y_AXIS));

        jPanel7.setBorder(new javax.swing.border.TitledBorder(null, "Massive Damage Failure", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        effect1.setSelected(true);
        effect1.setText("Failure kills character (3rd Ed)");
        effectGroup.add(effect1);
        effect1.setEnabled(false);
        jPanel7.add(effect1);

        effect2.setText("Failure takes character to -1 hit points (Modern)");
        effectGroup.add(effect2);
        effect2.setEnabled(false);
        jPanel7.add(effect2);

        effect3.setText("Failure does half total hit points (House)");
        effectGroup.add(effect3);
        effect3.setEnabled(false);
        jPanel7.add(effect3);

        effect4.setText("Failure does half current hit points (House)");
        effectGroup.add(effect4);
        effect4.setEnabled(false);
        jPanel7.add(effect4);

        jPanel3.add(jPanel7);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.Y_AXIS));

        jPanel4.setBorder(new javax.swing.border.TitledBorder(null, "Misc", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        sizeCheck.setSelected(true);
        sizeCheck.setText("Take size into account (3rd Ed)");
        sizeCheck.setEnabled(false);
        jPanel4.add(sizeCheck);

        sizeLabel1.setText("(+10 for each size category larger than Medium)");
        sizeLabel1.setEnabled(false);
        jPanel4.add(sizeLabel1);

        sizeLabel2.setText("(-10 for each size category smaller)");
        sizeLabel2.setEnabled(false);
        jPanel4.add(sizeLabel2);

        jPanel3.add(jPanel4);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel2, java.awt.BorderLayout.CENTER);

        jScrollPane1.setViewportView(jPanel5);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

	private void massiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_massiveActionPerformed
		if(evt.getSource() == massive1) {
			effect1.setEnabled(false);
			effect2.setEnabled(false);
			effect3.setEnabled(false);
			effect4.setEnabled(false);
			sizeCheck.setEnabled(false);
			sizeLabel1.setEnabled(false);
			sizeLabel2.setEnabled(false);
		}
		else if(evt.getSource() == massive2) {
			effect1.setEnabled(true);
			effect2.setEnabled(true);
			effect3.setEnabled(true);
			effect4.setEnabled(true);
			sizeCheck.setEnabled(true);
			sizeLabel1.setEnabled(true);
			sizeLabel2.setEnabled(true);
		}
		else if(evt.getSource() == massive3 || evt.getSource() == massive4) {
			effect1.setEnabled(true);
			effect2.setEnabled(true);
			effect3.setEnabled(true);
			effect4.setEnabled(true);
			sizeCheck.setEnabled(false);
			sizeLabel1.setEnabled(false);
			sizeLabel2.setEnabled(false);
		}
	}//GEN-LAST:event_massiveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup effectGroup;
    private javax.swing.JLabel sizeLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton massive2;
    private javax.swing.JRadioButton effect2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox sizeCheck;
    private javax.swing.JPanel jPanel5;
    private javax.swing.ButtonGroup massiveDamageGroup;
    private javax.swing.JRadioButton massive3;
    private javax.swing.JLabel sizeLabel1;
    private javax.swing.JRadioButton effect4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton massive1;
    private javax.swing.JRadioButton effect3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton effect1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton massive4;
    // End of variables declaration//GEN-END:variables

	private void setType(int choice) {
		if(choice == MASSIVE_OFF) {
			massive1.setSelected(true);
		}
		else if(choice == MASSIVE_DND) {
			massive2.setSelected(true);
		}
		else if(choice == MASSIVE_D20_MODERN) {
			massive3.setSelected(true);
		}
		else if(choice == MASSIVE_HOUSE_HALF) {
			massive4.setSelected(true);
		}
	}

	private int getType() {
		int returnVal = 0;
		if(massive1.isSelected()) {
			returnVal = MASSIVE_OFF;
		}
		else if(massive2.isSelected()) {
			returnVal = MASSIVE_DND;
		}
		else if(massive3.isSelected()) {
			returnVal = MASSIVE_D20_MODERN;
		}
		else if(massive4.isSelected()) {
			returnVal = MASSIVE_HOUSE_HALF;
		}
		return returnVal;
	}

	private void setEffect(int choice) {
		if(choice == MASSIVE_EFFECT_KILL) {
			effect1.setSelected(true);
		}
		else if(choice == MASSIVE_EFFECT_NEGATIVE) {
			effect2.setSelected(true);
		}
		else if(choice == MASSIVE_EFFECT_HALF_TOTAL) {
			effect3.setSelected(true);
		}
		else if(choice == MASSIVE_EFFECT_HALF_CURRENT) {
			effect4.setSelected(true);
		}
	}

	private int getEffect() {
		int returnVal = 0;
		if(effect1.isSelected()) {
			returnVal = MASSIVE_EFFECT_KILL;
		}
		else if(effect2.isSelected()) {
			returnVal = MASSIVE_EFFECT_NEGATIVE;
		}
		else if(effect3.isSelected()) {
			returnVal = MASSIVE_EFFECT_HALF_TOTAL;
		}
		else if(effect4.isSelected()) {
			returnVal = MASSIVE_EFFECT_HALF_CURRENT;
		}
		return returnVal;
	}

	private void setSizeMod(boolean selected) {
		sizeCheck.setSelected(selected);
	}

	public void applyPreferences() {
		SettingsHandler.setGMGenOption(InitiativePlugin.LOG_NAME + ".Damage.Massive.Type", getType());
		SettingsHandler.setGMGenOption(InitiativePlugin.LOG_NAME + ".Damage.Massive.Effect", getEffect());
		SettingsHandler.setGMGenOption(InitiativePlugin.LOG_NAME + ".Damage.Massive.SizeMod", sizeCheck.isSelected());
	}

	public void initPreferences() {
		setType(SettingsHandler.getGMGenOption(InitiativePlugin.LOG_NAME + ".Damage.Massive.Type", MASSIVE_OFF));
		setEffect(SettingsHandler.getGMGenOption(InitiativePlugin.LOG_NAME + ".Damage.Massive.Effect", MASSIVE_EFFECT_KILL));
		setSizeMod(SettingsHandler.getGMGenOption(InitiativePlugin.LOG_NAME + ".Damage.Massive.SizeMod", true));
	}

	public String toString() {
		return "Massive Damage";
	}
}
