<?xml version="1.0" standalone="no"?>
<!DOCTYPE s1 SYSTEM "sbk:/style/dtd/document.dtd">

<!--
 * The Apache Software License, Version 1.1
 *
 *
 * Copyright (c) 1999 The Apache Software Foundation.  All rights 
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer. 
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:  
 *       "This product includes software developed by the
 *        Apache Software Foundation (http://www.apache.org/)."
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The names "Xalan" and "Apache Software Foundation" must
 *    not be used to endorse or promote products derived from this
 *    software without prior written permission. For written 
 *    permission, please contact apache@apache.org.
 *
 * 5. Products derived from this software may not be called "Apache",
 *    nor may "Apache" appear in their name, without prior written
 *    permission of the Apache Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 *
 * This software consists of voluntary contributions made by many
 * individuals on behalf of the Apache Software Foundation and was
 * originally based on software copyright (c) 1999, Lotus
 * Development Corporation., http://www.lotus.com.  For more
 * information on the Apache Software Foundation, please see
 * <http://www.apache.org/>.
 -->
<s1 title="API Overview">

  <s2 title="API Summary">
    <p>&xslt4j; implements the <resource-ref idref="XSLT"/>.</p>
  </s2>
  <s2 title="Description">
    <p>XLST is a stylesheet language for transforming XML documents into other XML documents, HTML documents, 
    or other document types. The language includes the XSL Transformation vocabulary and XPath, a language for
    addressing parts of an XML document. An XSL stylesheet describes how to transform the tree of nodes in the XML
    input into another tree of nodes.</p>
    <p><em>Basic procedure for performing transformations:</em></p>
    <ol>
      <li>Use one of the {@link org.apache.xalan.xslt.XSLTProcessorFactory} static getProcessor methods to
      instantiate an {@link org.apache.xalan.xslt.XSLTProcessor}.<br/><br/>
       By default, the XSLTProcessor uses the {@link org.apache.xalan.xpath.dtm.DTMLiaison} and the
       high-performance <resource-ref idref="dtm_fr_jindex"/> "pseudo" DOM parser to process the input.  If your input or output
       is a DOM node (rather than a URL, file, or stream), &xslt4j; uses {@link org.apache.xalan.xpath.xdom.XercesLiaison
       XercesLiaison} and the Xerces DOM parser.<br/><br/>
       The XSLT and XPath engines are independent from any given DOM or XML implementation. All parser-dependent
       calls are funneled through the {@link org.apache.xalan.xpath.xml.XMLParserLiaison}.<br/><br/></li>     
       <li>Set up {@link org.apache.xalan.xslt.XSLTInputSource} objects for the XML input and XSL stylesheet. 
       You can use a file name or URL, character stream, byte stream, or SAX input stream to instantiate an
       XSLTInputSource object.<br/><br/>
       If the XML document contains a stylesheet Processing Instruction (PI), you do not need to create a separate
       XSLTInputSource object for an XSL stylesheet.<br/><br/>
       <em>Note:</em> For improved performance with a series of transformations, use the XSLTProcessor
       processStylesheet method to compile the XSL stylesheet. The result is a 
       {@link org.apache.xalan.xslt.StylesheetRoot} object with its own process() method for performing transformations.
        Compiling the stylesheet is also useful when you need to get information from the
       stylesheet before the transformation occurs. You also must compile the stylesheet if you are using the
        XSLTProcessor as a SAX document handler.<br/><br/></li>
       <li>Set up an {@link org.apache.xalan.xslt.XSLTResultTarget} for the transformation output. You can use a
       file name or URL, character stream, byte stream, or SAX document handler to instantiate an XSLTResultTarget
       object.<br/><br/></li>
       <li>Use the XSLTProcessor or (if you have compiled the stylesheet) the(@link org.apache.xalan.xslt.StylesheetRoot}
       process method to perform the transformation.<br/><br/>
        &xslt4j; is thread-safe for one instance per thread. If you are using the same instance of XSLTProcessor to
         perform more than one transformation, call the reset method between transformations.</li>
    </ol>
    <p>For an introduction to basic usage patterns, see <resource-ref idref="usagepatterns_fr_jindex"/>.</p>
  </s2>

</s1>